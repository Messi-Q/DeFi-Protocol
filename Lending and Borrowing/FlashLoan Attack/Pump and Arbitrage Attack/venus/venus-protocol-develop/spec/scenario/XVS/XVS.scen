
Test "Check Name"
    XVS Deploy Geoff
    Assert Equal (XVS Name) "Venus"

Test "Check Symbol"
    XVS Deploy Geoff
    Assert Equal (XVS Symbol) "XVS"

Test "Check Decimals"
    XVS Deploy Geoff
    Assert Equal (XVS Decimals) 18

Test "Check Total Supply"
    XVS Deploy Geoff
    Assert Equal (XVS TotalSupply) 30000000e18

Test "Check account receives Total Supply after deploy and emits Transfer event"
    XVS Deploy Geoff
    Assert Equal (XVS TokenBalance Geoff) 30000000e18
    Assert Log Transfer (from (Address Zero)) (to (Address Geoff)) (amount "30000000000000000000000000")

Test "Check approve sets correct approval and emits Approval event"
    XVS Deploy Geoff
    From Geoff (XVS Approve Jared 10)
    Assert Equal (XVS Allowance Geoff Jared) 10
    Assert Log Approval (owner (Address Geoff)) (spender (Address Jared)) (amount "10")

Test "Check approve with bad allowance reverts"
    XVS Deploy Geoff
    AllowFailures
    From Geoff (XVS Approve Jared 1e70)
    Assert Revert "revert XVS::approve: amount exceeds 96 bits"

Test "Check transfer updates balances correctly, emits Transfer event, and returns true"
    XVS Deploy Geoff
    From Geoff (XVS Transfer Jared 10)
    Assert Equal (XVS TokenBalance Geoff) 29999999999999999999999990
    Assert Equal (XVS TokenBalance Jared) 10
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "10")

Test "Check self-transfer updates balances correctly, emits Transfer event, and returns true"
    XVS Deploy Geoff
    Expect Changes (XVS VotesLength Geoff) Zero
    Expect Changes (XVS TokenBalance Geoff) Zero
    From Geoff (XVS Transfer Geoff 10)
    Assert Log Transfer (from (Address Geoff)) (to (Address Geoff)) (amount "10")
    Expect Changes (XVS VotesLength Geoff) Zero
    Expect Changes (XVS TokenBalance Geoff) Zero
    From Geoff (XVS Transfer Geoff 0)
    Assert Log Transfer (from (Address Geoff)) (to (Address Geoff)) (amount "0")

Test "Check transferFrom with unlimited allowance updates balances correctly, emits Transfer event, and returns true"
    XVS Deploy Geoff
    From Geoff (XVS Approve Jared UInt256Max)
    From Jared (XVS TransferFrom Geoff Jared 10)
    Assert Equal (XVS TokenBalance Geoff) 29999999999999999999999990
    Assert Equal (XVS TokenBalance Jared) 10
    Assert Equal (XVS Allowance Geoff Jared) UInt96Max
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "10")

Test "Check transferFrom with unlimited allowance updates balances correctly, emits Transfer event, and returns true"
    XVS Deploy Geoff
    From Geoff (XVS Approve Jared UInt96Max)
    From Jared (XVS TransferFrom Geoff Jared 10)
    Assert Equal (XVS TokenBalance Geoff) 29999999999999999999999990
    Assert Equal (XVS TokenBalance Jared) 10
    Assert Equal (XVS Allowance Geoff Jared) UInt96Max
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "10")

Test "Check transferFrom with allowance updates balances correctly, emits Transfer event, and returns true"
    XVS Deploy Geoff
    From Geoff (XVS Approve Jared 10)
    From Jared (XVS TransferFrom Geoff Jared 9)
    Assert Equal (XVS TokenBalance Geoff) 29999999999999999999999991
    Assert Equal (XVS TokenBalance Jared) 9
    Assert Equal (XVS Allowance Geoff Jared) 1
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "9")
    Assert Log Approval (owner (Address Geoff)) (spender (Address Jared)) (amount "1")

Test "Check transferFrom reverts with not sufficient allowance"
    XVS Deploy Geoff
    From Geoff (XVS Approve Jared 10)
    AllowFailures
    From Jared (XVS TransferFrom Geoff Jared 11)
    Assert Revert "revert XVS::transferFrom: transfer amount exceeds spender allowance"

Test "Check transfer reverts when transferring too much"
    XVS Deploy Geoff
    AllowFailures
    From Geoff (XVS Transfer Jared 30000001e18)
    Assert Revert "revert XVS::_transferTokens: transfer amount exceeds balance"

Test "Check transfer reverts when transferring to address 0"
    XVS Deploy Geoff
    AllowFailures
    From Geoff (XVS Transfer (Address Zero) 30000000e18)
    Assert Revert "revert XVS::_transferTokens: cannot transfer to the zero address"

Test "Delegate with zero balance doesn't change votes checkpoints"
    XVS Deploy Geoff
    Assert Equal (XVS VotesLength Geoff) 0
    From Jared (XVS Delegate Geoff)
    Assert Equal (XVS VotesLength Geoff) 0
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))

Test "Delegate from address(0) to account with zero checkpoints"
    XVS Deploy Geoff
    From Geoff (XVS Transfer Jared 10)
    Assert Equal (XVS VotesLength Geoff) 0
    From Jared (XVS Delegate Geoff)
    Assert Equal (XVS VotesLength Geoff) 1
    Assert Equal (XVS GetCurrentVotes Geoff) 10
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Equal (XVS VotesLength Zero) 0
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")

Test "Delegate from address(0) to account with existing checkpoints"
    XVS Deploy Geoff
    From Geoff (XVS Transfer Jared 10)
    From Geoff (XVS Transfer Torrey 14)
    Assert Equal (XVS VotesLength Geoff) 0
    From Jared (XVS Delegate Geoff)
    Assert Equal (XVS VotesLength Geoff) 1
    Assert Equal (XVS GetCurrentVotes Geoff) 10
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")
    From Torrey (XVS Delegate Geoff)
    Assert Equal (XVS VotesLength Geoff) 2
    Assert Equal (XVS GetCurrentVotes Geoff) 24
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Equal (XVS VotesLength Zero) 0
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "24")

Test "Delegate to address(0)"
    XVS Deploy Geoff
    From Geoff (XVS Transfer Jared 10)
    From Geoff (XVS Transfer Torrey 14)
    Assert Equal (XVS VotesLength Geoff) 0
    From Jared (XVS Delegate Geoff)
    Assert Equal (XVS VotesLength Geoff) 1
    Assert Equal (XVS GetCurrentVotes Geoff) 10
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")
    From Torrey (XVS Delegate Geoff)
    Assert Equal (XVS VotesLength Geoff) 2
    Assert Equal (XVS GetCurrentVotes Geoff) 24
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "24")
    From Torrey (XVS Delegate Zero)
    Assert Equal (XVS VotesLength Geoff) 3
    Assert Equal (XVS GetCurrentVotes Geoff) 10
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Geoff)) (toDelegate (Address Zero))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "24") (newBalance "10")
    Assert Equal (XVS VotesLength Zero) 0

Test "Delegate from one account to another account with zero checkpoints"
    XVS Deploy Geoff
    From Geoff (XVS Transfer Jared 10)
    From Geoff (XVS Transfer Torrey 14)
    Assert Equal (XVS VotesLength Geoff) 0
    From Jared (XVS Delegate Geoff)
    Assert Equal (XVS VotesLength Geoff) 1
    Assert Equal (XVS GetCurrentVotes Geoff) 10
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")
    From Torrey (XVS Delegate Geoff)
    Assert Equal (XVS VotesLength Geoff) 2
    Assert Equal (XVS GetCurrentVotes Geoff) 24
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Equal (XVS VotesLength Coburn) 0
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "24")
    From Torrey (XVS Delegate Coburn)
    Assert Equal (XVS VotesLength Coburn) 1
    Assert Equal (XVS GetCurrentVotes Coburn) 14
    Assert Equal (XVS GetCurrentVotesBlock Coburn) LastBlock
    Assert Equal (XVS VotesLength Geoff) 3
    Assert Equal (XVS GetCurrentVotes Geoff) 10
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Geoff)) (toDelegate (Address Coburn))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "24") (newBalance "10")
    Assert Log DelegateVotesChanged (delegate (Address Coburn)) (previousBalance "0") (newBalance "14")

Test "Delegate from one account to another account with multiple checkpoints"
    XVS Deploy Geoff
    From Geoff (XVS Transfer Jared 10)
    From Geoff (XVS Transfer Torrey 14)
    From Geoff (XVS Transfer Coburn 2)
    Assert Equal (XVS VotesLength Geoff) 0
    From Jared (XVS Delegate Geoff)
    Assert Equal (XVS VotesLength Geoff) 1
    Assert Equal (XVS GetCurrentVotes Geoff) 10
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")
    From Torrey (XVS Delegate Geoff)
    Assert Equal (XVS VotesLength Geoff) 2
    Assert Equal (XVS GetCurrentVotes Geoff) 24
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Equal (XVS VotesLength Coburn) 0
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "24")
    From Coburn (XVS Delegate Coburn)
    Assert Equal (XVS VotesLength Coburn) 1
    Assert Equal (XVS GetCurrentVotes Coburn) 2
    Assert Equal (XVS GetCurrentVotesBlock Coburn) LastBlock
    Assert Log DelegateChanged (delegator (Address Coburn)) (fromDelegate (Address Zero)) (toDelegate (Address Coburn))
    Assert Log DelegateVotesChanged (delegate (Address Coburn)) (previousBalance "0") (newBalance "2")
    From Torrey (XVS Delegate Coburn)
    Assert Equal (XVS VotesLength Coburn) 2
    Assert Equal (XVS GetCurrentVotes Coburn) 16
    Assert Equal (XVS GetCurrentVotesBlock Coburn) LastBlock
    Assert Equal (XVS VotesLength Geoff) 3
    Assert Equal (XVS GetCurrentVotes Geoff) 10
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Geoff)) (toDelegate (Address Coburn))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "24") (newBalance "10")
    Assert Log DelegateVotesChanged (delegate (Address Coburn)) (previousBalance "2") (newBalance "16")

Test "Vote checkpoints don't change on transfer when to and from accounts delegate to same account"
    XVS Deploy Geoff
    From Geoff (XVS Transfer Jared 10)
    From Geoff (XVS Transfer Torrey 14)
    Assert Equal (XVS VotesLength Geoff) 0
    From Jared (XVS Delegate Geoff)
    Assert Equal (XVS VotesLength Geoff) 1
    Assert Equal (XVS GetCurrentVotes Geoff) 10
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")
    From Torrey (XVS Delegate Geoff)
    Assert Equal (XVS VotesLength Geoff) 2
    Assert Equal (XVS GetCurrentVotes Geoff) 24
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "24")
    Invariant Static (XVS VotesLength Geoff)
    Invariant Static (XVS GetCurrentVotes Geoff)
    Invariant Static (XVS GetCurrentVotesBlock Geoff)
    From Torrey (XVS Transfer Jared 14)

Test "Only one checkpoint is added per block for multiple increased balance updates"
    XVS Deploy Scenario Geoff
    Assert Equal (XVS VotesLength Geoff) 0
    Assert Equal (XVS GetCurrentVotes Geoff) 0
    From Jared (XVS Delegate Geoff)
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    From Torrey (XVS Delegate Geoff)
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    From Geoff (XVS TransferScenario (Jared Torrey) 10)
    Assert Equal (XVS VotesLength Geoff) 1
    Assert Equal (XVS GetCurrentVotes Geoff) 20
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Equal (XVS VotesLength Zero) 0
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "20")

Test "Only one checkpoint is added per block for multiple decreased balance updates"
    XVS Deploy Scenario Geoff
    From Geoff (XVS Transfer Jared 10)
    From Geoff (XVS Transfer Torrey 10)
    Assert Equal (XVS VotesLength Geoff) 0
    Assert Equal (XVS GetCurrentVotes Geoff) 0
    From Jared (XVS Delegate Geoff)
    Assert Equal (XVS VotesLength Geoff) 1
    Assert Equal (XVS GetCurrentVotes Geoff) 10
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")
    From Torrey (XVS Delegate Geoff)
    Assert Equal (XVS VotesLength Geoff) 2
    Assert Equal (XVS GetCurrentVotes Geoff) 20
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "20")
    From Jared (XVS Approve Geoff 10)
    From Torrey (XVS Approve Geoff 10)
    From Geoff (XVS TransferFromScenario (Jared Torrey) 10)
    Assert Equal (XVS VotesLength Geoff) 3
    Assert Equal (XVS GetCurrentVotes Geoff) 0
    Assert Equal (XVS GetCurrentVotesBlock Geoff) LastBlock
    Assert Equal (XVS VotesLength Zero) 0
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "20") (newBalance "10")
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "0")

Test "Check transfer reverts when block number exceeds 32 bits"
    XVS Deploy Geoff
    From Jared (XVS Delegate Geoff)
    AllowFailures
    SetBlockNumber 5000000000
    From Geoff (XVS Transfer Jared 30000000e18)
    Assert Revert "revert XVS::_writeCheckpoint: block number exceeds 32 bits"
