Macro SetupPriceOracleProxy
    Unitroller Deploy
    PriceOracle Deploy Simple
    ComptrollerImpl Deploy Scenario ScenComptroller
    Unitroller SetPendingImpl ScenComptroller
    ComptrollerImpl ScenComptroller Become
    NewBNBToken vBNB
    NewVToken USDC vUSDC
    NewVToken SAI vSAI
    NewVToken DAI vDAI
    NewVToken USDT vUSDT
    Comptroller SupportMarket vBNB
    Comptroller SupportMarket vUSDC
    Comptroller SupportMarket vSAI
    Comptroller SupportMarket vDAI
    Comptroller SupportMarket vUSDT
    Comptroller SetCloseFactor 0.1
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address vBNB) (Address vUSDC) (Address vSAI) (Address vDAI) (Address vUSDT)
    Comptroller SetPriceOracle (PriceOracleProxy Address)

Test "uses address(2) for dai and address(1) for usdc"
    SetupPriceOracleProxy
    PriceOracle SetDirectPrice (Address 0x0000000000000000000000000000000000000001) 5740564708.572881
    PriceOracle SetDirectPrice (Address 0x0000000000000000000000000000000000000002) 0.005842307360923634
    Assert Equal (PriceOracleProxy Price vUSDC) 5740564708572881000000000000
    Assert Equal (PriceOracleProxy Price vDAI) 5842307360923634

Test "sai price is dai price until set"
    SetupPriceOracleProxy
    PriceOracle SetDirectPrice (Address 0x0000000000000000000000000000000000000002) 0.005842307360923634
    Assert Equal (PriceOracleProxy Price vSAI) 5842307360923634
    PriceOracleProxy SetSaiPrice 0.006842307360923634
    Assert Equal (PriceOracleProxy Price vSAI) 6842307360923634

Test "gets tether and usdc prices"
    SetupPriceOracleProxy
    PriceOracle SetDirectPrice (Address 0x0000000000000000000000000000000000000001) 5740564708.572881
    -- scaled to 1e30 bc both tokens have 6 decimals
    Assert Equal (PriceOracleProxy Price vUSDT) 5740564708572881000000000000
    Assert Equal (PriceOracleProxy Price vUSDC) 5740564708572881000000000000
