{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDenorm",
          "type": "uint256"
        }
      ],
      "name": "LOG_DENORM_UPDATED",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "desiredDenorm",
          "type": "uint256"
        }
      ],
      "name": "LOG_DESIRED_DENORM_SET",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmountOut",
          "type": "uint256"
        }
      ],
      "name": "LOG_EXIT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        }
      ],
      "name": "LOG_JOIN",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxPoolTokens",
          "type": "uint256"
        }
      ],
      "name": "LOG_MAX_TOKENS_UPDATED",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minimumBalance",
          "type": "uint256"
        }
      ],
      "name": "LOG_MINIMUM_BALANCE_UPDATED",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "LOG_PUBLIC_SWAP_ENABLED",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmountOut",
          "type": "uint256"
        }
      ],
      "name": "LOG_SWAP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "swapFee",
          "type": "uint256"
        }
      ],
      "name": "LOG_SWAP_FEE_UPDATED",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "desiredDenorm",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minimumBalance",
          "type": "uint256"
        }
      ],
      "name": "LOG_TOKEN_ADDED",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LOG_TOKEN_READY",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LOG_TOKEN_REMOVED",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "VERSION_NUMBER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "whom",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "configure",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "poolAmountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "minAmountsOut",
          "type": "uint256[]"
        }
      ],
      "name": "exitPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPoolAmountIn",
          "type": "uint256"
        }
      ],
      "name": "exitswapExternAmountOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "poolAmountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut",
          "type": "uint256"
        }
      ],
      "name": "exitswapPoolAmountIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "extrapolatePoolValueFromToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "flashBorrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentDesiredTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getDenormalizedWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxPoolTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getMinimumBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        }
      ],
      "name": "getSpotPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSwapFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getTokenRecord",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "bound",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "ready",
              "type": "bool"
            },
            {
              "internalType": "uint40",
              "name": "lastDenormUpdate",
              "type": "uint40"
            },
            {
              "internalType": "uint96",
              "name": "denorm",
              "type": "uint96"
            },
            {
              "internalType": "uint96",
              "name": "desiredDenorm",
              "type": "uint96"
            },
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "internalType": "struct IIndexPool.Record",
          "name": "record",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalDenormalizedWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getUsedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "gulp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        },
        {
          "internalType": "uint96[]",
          "name": "denorms",
          "type": "uint96[]"
        },
        {
          "internalType": "address",
          "name": "tokenProvider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "unbindHandler",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "t",
          "type": "address"
        }
      ],
      "name": "isBound",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPublicSwap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "poolAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "maxAmountsIn",
          "type": "uint256[]"
        }
      ],
      "name": "joinPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minPoolAmountOut",
          "type": "uint256"
        }
      ],
      "name": "joinswapExternAmountIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "poolAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxAmountIn",
          "type": "uint256"
        }
      ],
      "name": "joinswapPoolAmountOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint96[]",
          "name": "desiredDenorms",
          "type": "uint96[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minimumBalances",
          "type": "uint256[]"
        }
      ],
      "name": "reindexTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint96[]",
          "name": "desiredDenorms",
          "type": "uint96[]"
        }
      ],
      "name": "reweighTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxPoolTokens",
          "type": "uint256"
        }
      ],
      "name": "setMaxPoolTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minimumBalance",
          "type": "uint256"
        }
      ],
      "name": "setMinimumBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "swapFee",
          "type": "uint256"
        }
      ],
      "name": "setSwapFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPrice",
          "type": "uint256"
        }
      ],
      "name": "swapExactAmountIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxAmountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPrice",
          "type": "uint256"
        }
      ],
      "name": "swapExactAmountOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "receipt": {
    "to": null,
    "from": "0x8740d0EF44FFd926302E36CfAf7A38e61dAD550e",
    "contractAddress": "0xAe47c8B515f90F1A82d68ee2e22FDD9cF630C3E3",
    "transactionIndex": 20,
    "gasUsed": "5334716",
    "logsBloom": "0x
    "blockHash": "0xb441d40642d70255063d88b973939e4a0569c3c8505f05768b3a1a3f1e992234",
    "transactionHash": "0xa9f4fd02f6a16b954693291c9aac42e4df89e76c2e0187dbd0f883724d2625d9",
    "logs": [],
    "blockNumber": 7623728,
    "cumulativeGasUsed": "8488138",
    "status": 1,
    "byzantium": true
  },
  "address": "0xAe47c8B515f90F1A82d68ee2e22FDD9cF630C3E3",
  "args": [],
  "solcInputHash": "0x9b9612b5b3e058dacf08fa5cf84baae06950862497470c7f471aefffaf427946",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDenorm\",\"type\":\"uint256\"}],\"name\":\"LOG_DENORM_UPDATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"desiredDenorm\",\"type\":\"uint256\"}],\"name\":\"LOG_DESIRED_DENORM_SET\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"}],\"name\":\"LOG_EXIT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"}],\"name\":\"LOG_JOIN\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxPoolTokens\",\"type\":\"uint256\"}],\"name\":\"LOG_MAX_TOKENS_UPDATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumBalance\",\"type\":\"uint256\"}],\"name\":\"LOG_MINIMUM_BALANCE_UPDATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"LOG_PUBLIC_SWAP_ENABLED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"}],\"name\":\"LOG_SWAP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"LOG_SWAP_FEE_UPDATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"desiredDenorm\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumBalance\",\"type\":\"uint256\"}],\"name\":\"LOG_TOKEN_ADDED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LOG_TOKEN_READY\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LOG_TOKEN_REMOVED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VERSION_NUMBER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whom\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"configure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPoolAmountIn\",\"type\":\"uint256\"}],\"name\":\"exitswapExternAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"exitswapPoolAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extrapolatePoolValueFromToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentDesiredTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getDenormalizedWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxPoolTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getMinimumBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"getSpotPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenRecord\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"bound\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ready\",\"type\":\"bool\"},{\"internalType\":\"uint40\",\"name\":\"lastDenormUpdate\",\"type\":\"uint40\"},{\"internalType\":\"uint96\",\"name\":\"denorm\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"desiredDenorm\",\"type\":\"uint96\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct IIndexPool.Record\",\"name\":\"record\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalDenormalizedWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getUsedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"gulp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint96[]\",\"name\":\"denorms\",\"type\":\"uint96[]\"},{\"internalType\":\"address\",\"name\":\"tokenProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"unbindHandler\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"}],\"name\":\"isBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPublicSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolAmountOut\",\"type\":\"uint256\"}],\"name\":\"joinswapExternAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"}],\"name\":\"joinswapPoolAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint96[]\",\"name\":\"desiredDenorms\",\"type\":\"uint96[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minimumBalances\",\"type\":\"uint256[]\"}],\"name\":\"reindexTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint96[]\",\"name\":\"desiredDenorms\",\"type\":\"uint96[]\"}],\"name\":\"reweighTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxPoolTokens\",\"type\":\"uint256\"}],\"name\":\"setMaxPoolTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minimumBalance\",\"type\":\"uint256\"}],\"name\":\"setMinimumBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"setSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"}],\"name\":\"swapExactAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"}],\"name\":\"swapExactAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"LOG_DENORM_UPDATED(address,uint256)\":{\"details\":\"Emitted when a token's weight updates. \"},\"LOG_DESIRED_DENORM_SET(address,uint256)\":{\"details\":\"Emitted when a token's desired weight is set. \"},\"LOG_EXIT(address,address,uint256)\":{\"details\":\"Emitted when pool tokens are burned for underlying. \"},\"LOG_JOIN(address,address,uint256)\":{\"details\":\"Emitted when underlying tokens are deposited for pool tokens. \"},\"LOG_MAX_TOKENS_UPDATED(uint256)\":{\"details\":\"Emitted when the maximum tokens value is updated. \"},\"LOG_MINIMUM_BALANCE_UPDATED(address,uint256)\":{\"details\":\"Emitted when a token's minimum balance is updated. \"},\"LOG_PUBLIC_SWAP_ENABLED()\":{\"details\":\"Emitted when public trades are enabled. \"},\"LOG_SWAP(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when tokens are swapped. \"},\"LOG_SWAP_FEE_UPDATED(uint256)\":{\"details\":\"Emitted when the swap fee is updated. \"},\"LOG_TOKEN_ADDED(address,uint256,uint256)\":{\"details\":\"Emitted when a token is unbound from the pool. \"},\"LOG_TOKEN_READY(address)\":{\"details\":\"Emitted when a token reaches its minimum balance. \"},\"LOG_TOKEN_REMOVED(address)\":{\"details\":\"Emitted when a token is unbound from the pool. \"}},\"kind\":\"dev\",\"methods\":{\"configure(address,string,string)\":{\"details\":\"Sets the controller address and the token name & symbol. Note: This saves on storage costs for multi-step pool deployment.\",\"params\":{\"controller\":\"Controller of the pool\",\"name\":\"Name of the pool token\",\"symbol\":\"Symbol of the pool token\"}},\"exitPool(uint256,uint256[])\":{\"details\":\"Burns `poolAmountIn` pool tokens in exchange for the amounts of each underlying token's balance proportional to the ratio of tokens burned to total pool supply. The amount of each token transferred to the caller must be greater than or equal to the associated minimum output amount from the `minAmountsOut` array.\",\"params\":{\"minAmountsOut\":\"Minimum amount of each token to receive, in the same order as the pool's _tokens list.\",\"poolAmountIn\":\"Exact amount of pool tokens to burn\"}},\"exitswapExternAmountOut(address,uint256,uint256)\":{\"details\":\"Burn up to `maxPoolAmountIn` for exactly `tokenAmountOut` of `tokenOut`. Returns the number of pool tokens burned. The pool implicitly burns the tokens for all underlying tokens and swaps them to the desired output token. A swap fee is charged against the output tokens.\",\"params\":{\"maxPoolAmountIn\":\"Maximum amount of pool tokens to burn\",\"tokenAmountOut\":\"Exact amount of `tokenOut` to receive\",\"tokenOut\":\"Token to receive\"},\"returns\":{\"_0\":\"poolAmountIn - Amount of pool tokens burned\"}},\"exitswapPoolAmountIn(address,uint256,uint256)\":{\"details\":\"Burns `poolAmountIn` pool tokens in exchange for at least `minAmountOut` of `tokenOut`. Returns the number of tokens sent to the caller. The pool implicitly burns the tokens for all underlying tokens and swaps them to the desired output token. A swap fee is charged against the output tokens.\",\"params\":{\"minAmountOut\":\"Minimum amount of `tokenOut` to receive\",\"poolAmountIn\":\"Exact amount of pool tokens to burn\",\"tokenOut\":\"Token to receive\"},\"returns\":{\"_0\":\"tokenAmountOut - Amount of `tokenOut` received\"}},\"extrapolatePoolValueFromToken()\":{\"details\":\"Finds the first token which is both initialized and has a desired weight above 0, then returns the address of that token and the extrapolated value of the pool in terms of that token. The value is extrapolated by multiplying the token's balance by the reciprocal of its normalized weight.\",\"returns\":{\"_0\":\"(token, extrapolatedValue)\"}},\"flashBorrow(address,address,uint256,bytes)\":{\"details\":\"Execute a flash loan, transferring `amount` of `token` to `recipient`. `amount` must be repaid with `swapFee` interest by the end of the transaction.\",\"params\":{\"amount\":\"Amount to borrow\",\"data\":\"Data to send to the recipient in `receiveFlashLoan` call\",\"recipient\":\"Must implement the IFlashLoanRecipient interface\",\"token\":\"Token to borrow\"}},\"getBalance(address)\":{\"details\":\"Returns the stored balance of a bound token.\"},\"getController()\":{\"details\":\"Returns the controller address.\"},\"getCurrentDesiredTokens()\":{\"details\":\"Returns the list of tokens which have a desired weight above 0. Tokens with a desired weight of 0 are set to be phased out of the pool.\"},\"getCurrentTokens()\":{\"details\":\"Get all bound tokens.\"},\"getDenormalizedWeight(address)\":{\"details\":\"Returns the denormalized weight of a bound token.\"},\"getMinimumBalance(address)\":{\"details\":\"Get the minimum balance of an uninitialized token. Note: Throws if the token is initialized.\"},\"getNumTokens()\":{\"details\":\"Get the number of tokens bound to the pool.\"},\"getSpotPrice(address,address)\":{\"details\":\"Returns the spot price for `tokenOut` in terms of `tokenIn`.\"},\"getTokenRecord(address)\":{\"details\":\"Returns the record for a token bound to the pool.\"},\"getTotalDenormalizedWeight()\":{\"details\":\"Get the total denormalized weight of the pool.\"},\"getUsedBalance(address)\":{\"details\":\"Returns the balance of a token which is used in price calculations. If the token is initialized, this is the stored balance; if not, this is the minimum balance.\"},\"gulp(address)\":{\"details\":\"Absorb any tokens that have been sent to the pool. If the token is not bound, it will be sent to the unbound token handler.\"},\"initialize(address[],uint256[],uint96[],address,address)\":{\"details\":\"Sets up the initial assets for the pool. Note: `tokenProvider` must have approved the pool to transfer the corresponding `balances` of `tokens`.\",\"params\":{\"balances\":\"Initial balances to transfer\",\"denorms\":\"Initial denormalized weights for the tokens\",\"tokenProvider\":\"Address to transfer the balances from\",\"tokens\":\"Underlying tokens to initialize the pool with\"}},\"isBound(address)\":{\"details\":\"Check if a token is bound to the pool.\"},\"isPublicSwap()\":{\"details\":\"Check if swapping tokens and joining the pool is allowed.\"},\"joinPool(uint256,uint256[])\":{\"details\":\"Mint new pool tokens by providing the proportional amount of each underlying token's balance relative to the proportion of pool tokens minted. For any underlying tokens which are not initialized, the caller must provide the proportional share of the minimum balance for the token rather than the actual balance.\",\"params\":{\"maxAmountsIn\":\"Maximum amount of each token to pay in the same order as the pool's _tokens list.\",\"poolAmountOut\":\"Amount of pool tokens to mint\"}},\"joinswapExternAmountIn(address,uint256,uint256)\":{\"details\":\"Pay `tokenAmountIn` of `tokenIn` to mint at least `minPoolAmountOut` pool tokens. The pool implicitly swaps `(1- weightTokenIn) * tokenAmountIn` to the other underlying tokens. Thus a swap fee is charged against the input tokens.\",\"params\":{\"minPoolAmountOut\":\"Minimum amount of pool tokens to mint\",\"tokenAmountIn\":\"Exact amount of `tokenIn` to pay\",\"tokenIn\":\"Token to send the pool\"},\"returns\":{\"_0\":\"poolAmountOut - Amount of pool tokens minted\"}},\"joinswapPoolAmountOut(address,uint256,uint256)\":{\"details\":\"Pay up to `maxAmountIn` of `tokenIn` to mint exactly `poolAmountOut`. The pool implicitly swaps `(1- weightTokenIn) * tokenAmountIn` to the other underlying tokens. Thus a swap fee is charged against the input tokens.\",\"params\":{\"maxAmountIn\":\"Maximum amount of `tokenIn` to pay\",\"poolAmountOut\":\"Exact amount of pool tokens to mint\",\"tokenIn\":\"Token to send the pool\"},\"returns\":{\"_0\":\"tokenAmountIn - Amount of `tokenIn` paid\"}},\"reindexTokens(address[],uint96[],uint256[])\":{\"details\":\"Update the underlying assets held by the pool and their associated weights. Tokens which are not currently bound will be gradually added as they are swapped in to reach the provided minimum balances, which must be an amount of tokens worth the minimum weight of the total pool value. If a currently bound token is not received in this call, the token's desired weight will be set to 0.\"},\"reweighTokens(address[],uint96[])\":{\"details\":\"Sets the desired weights for the pool tokens, which will be adjusted over time as they are swapped. Note: This does not check for duplicate tokens or that the total of the desired weights is equal to the target total weight (25). Those assumptions should be met in the controller. Further, the provided tokens should only include the tokens which are not set for removal.\"},\"setMaxPoolTokens(uint256)\":{\"details\":\"Sets the maximum number of pool tokens that can be minted. This value will be used in the alpha to limit the maximum damage that can be caused by a catastrophic error. It can be gradually increased as the pool continues to not be exploited. If it is set to 0, the limit will be removed.\"},\"setMinimumBalance(address,uint256)\":{\"details\":\"Updates the minimum balance for an uninitialized token. This becomes useful if a token's external price significantly rises after being bound, since the pool can not send a token out until it reaches the minimum balance.\"},\"setSwapFee(uint256)\":{\"details\":\"Set the swap fee. Note: Swap fee must be between 0.0001% and 10%\"},\"swapExactAmountIn(address,uint256,address,uint256,uint256)\":{\"details\":\"Execute a token swap with a specified amount of input tokens and a minimum amount of output tokens. Note: Will revert if `tokenOut` is uninitialized.\",\"params\":{\"maxPrice\":\"Maximum ratio of input to output tokens\",\"minAmountOut\":\"Minimum amount of `tokenOut` to receive\",\"tokenAmountIn\":\"Exact amount of `tokenIn` to swap in\",\"tokenIn\":\"Token to swap in\",\"tokenOut\":\"Token to swap out\"},\"returns\":{\"_0\":\"(tokenAmountOut, spotPriceAfter)\"}},\"swapExactAmountOut(address,uint256,address,uint256,uint256)\":{\"details\":\"Trades at most `maxAmountIn` of `tokenIn` for exactly `tokenAmountOut` of `tokenOut`. Returns the actual input amount and the new spot price after the swap, which can not exceed `maxPrice`.\",\"params\":{\"maxAmountIn\":\"Maximum amount of `tokenIn` to pay\",\"maxPrice\":\"Maximum ratio of input to output tokens\",\"tokenAmountOut\":\"Exact amount of `tokenOut` to receive\",\"tokenIn\":\"Token to swap in\",\"tokenOut\":\"Token to swap out\"},\"returns\":{\"_0\":\"(tokenAmountIn, spotPriceAfter)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"deploy-contracts/balancer/IndexPool.sol\":\"IndexPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"deploy-contracts/balancer/BConst.sol\":{\"keccak256\":\"0xb14d3edccf249e20998746d069a22e337fee15bb79990a5c77dc909b04fbea4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e1d07d26d3d92d78f59f784c555acc14b71aab835f49a9661bc9c5913ae29983\",\"dweb:/ipfs/QmZavFgGtEHx6743bNqC9xuqu2GYZbeGppDcjQUrnys65u\"]},\"deploy-contracts/balancer/BMath.sol\":{\"keccak256\":\"0x3977bd3d74e453ac086351caff8632be550b31a4ba8fb9006a3d4b2706a46372\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8291d6a31be11495261debe3f7c796f6bf56ef8c6e119db601da89478d6b7d02\",\"dweb:/ipfs/QmVdBeMt5rhX2C3fqdwavP2H1yTAFviQiQEDtYJ9XWz1HW\"]},\"deploy-contracts/balancer/BNum.sol\":{\"keccak256\":\"0xba11f0262201ac91b35267a66b016bc41dda4e8532f066601c87d0ad5a8e41ee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d7caa6283970bebbf59048adc3f0a5a2844dc689d37c61dba070cd6df80a9e78\",\"dweb:/ipfs/QmeTzpgy4rGb8QgReemYbApNS2QWSQJP13WVrbc6P31Xk8\"]},\"deploy-contracts/balancer/BToken.sol\":{\"keccak256\":\"0xca7903de5cb67c295d93a9613b05ce9d564d4e9b880aec220a115cba7cc3ef62\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f93501b0a23f5ed165280e2c361b155b45fe6c0fd13e280bc9f519bdfa9877ca\",\"dweb:/ipfs/QmdxCp5eGu65n4tsQ3D317DcgGuJY1Rb17aba7n7wpqB8D\"]},\"deploy-contracts/balancer/IndexPool.sol\":{\"keccak256\":\"0xce6c971161e6e45d910946c5919e4a5016e3bbd8537c0011b6d95f2beec6efb1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0ed92d206ec8a695f794bfab0798239da71f38d89f51fa24a6af482fd6774063\",\"dweb:/ipfs/QmPcSD3Fe7VW1nQJeY3hjqngTaoYsLaVq8YSUViBLQy5sU\"]},\"deploy-contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xfb2bd666d15c2c4d68b703b296848821f455c6a30b6c570b17726e0bd9569855\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b56e4c6df7c9fddcf618820cfbd24b782be7b85c279b8f43db62d2a7eca30bb3\",\"dweb:/ipfs/QmYY1nLEixtrC3jLftm8nDYHtUnB6o66eG2CkbNzVLUgZe\"]},\"deploy-contracts/interfaces/IIndexPool.sol\":{\"keccak256\":\"0x5ce6544e5a8fc71fb8197cd12ffc64bc8ea6a00ef356c97ad87b3fa858d86fdc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ea19344b741ef9120772e8b66a5d5feac496b549f95ba5f0ecb47ff182549cf\",\"dweb:/ipfs/QmSY8JxwqMLt6K8Vc6cnnfFPPxe5bbJtojntfZBHAgbVzt\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50615f8980620000216000396000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80636d06dfa01161015c578063a20cfa75116100ce578063cd2ed8fb11610087578063cd2ed8fb14610572578063d4cadf681461057a578063d73dd62314610582578063dd62ed3e14610595578063f8b2cb4f146105a8578063fde924f7146105bb5761027f565b8063a20cfa751461050b578063a49c44d71461051e578063a9059cbb14610531578063b02f0b7314610544578063c3f4681014610557578063cc77828d1461056a5761027f565b80638c28cbe8116101205780638c28cbe8146104ac57806391bfa2bf146104bf578063936c3477146104d2578063948d8ce6146104da57806395d89b41146104ed57806398836f08146104f55761027f565b80636d06dfa01461044a57806370a082311461045d5780637c5e9ea4146104705780638025e303146104915780638201aa3f146104995761027f565b8063313ce567116101f55780634f69c0d4116101b95780634f69c0d4146103cb578063534d4f3d146103de5780635d5e8ce7146103f15780635db342771461040457806364c7d6611461041757806366188463146104375761027f565b8063313ce5671461037557806334e199071461038a57806346ab38f11461039d57806346ecfbd6146103b05780634aa4e0b5146103b85761027f565b806318160ddd1161024757806318160ddd1461030a57806319f0f8491461031257806323b872dd146103275780632f37b6241461033a5780633018205f1461034d5780633043ffc9146103625761027f565b806302c9674814610284578063039209af146102ad57806306fdde03146102c2578063095ea7b3146102d757806315e84af9146102f7575b600080fd5b610297610292366004615348565b6105c3565b6040516102a49190615e7c565b60405180910390f35b6102b561079e565b6040516102a491906156b0565b6102ca610905565b6040516102a49190615708565b6102ea6102e53660046152cf565b61099b565b6040516102a491906156fd565b61029761030536600461517d565b6109f4565b610297610a7b565b610325610320366004615260565b610a81565b005b6102ea6103353660046151b1565b610b7c565b6102ea610348366004615162565b610cad565b610355610ccf565b6040516102a49190615613565b6103256103703660046151f1565b610ce3565b61037d6110a1565b6040516102a49190615e93565b610325610398366004615556565b6110a6565b6102976103ab366004615348565b611162565b6102976112da565b6102976103c6366004615162565b6112e0565b6103256103d9366004615586565b6113ed565b6103256103ec366004615556565b611619565b6103256103ff366004615437565b61167d565b610297610412366004615348565b61175a565b61042a610425366004615162565b611938565b6040516102a49190615e11565b6102ea6104453660046152cf565b611a0f565b610297610458366004615348565b611ad8565b61029761046b366004615162565b611cab565b61048361047e3660046152f9565b611cc6565b6040516102a4929190615e85565b610297611fbd565b6104836104a73660046152f9565b611fc2565b6103256104ba366004615162565b612295565b6102976104cd366004615162565b612554565b61029761266d565b6102976104e8366004615162565b61269a565b6102ca612724565b6104fd612785565b6040516102a492919061564b565b61032561051936600461537b565b612889565b61032561052c3660046152cf565b612cdc565b6102ea61053f3660046152cf565b612dc4565b610325610552366004615586565b612dda565b6103256105653660046154a0565b6130a4565b6102b561343f565b6102976134c4565b6102976134ca565b6102ea6105903660046152cf565b6134f7565b6102976105a336600461517d565b61356b565b6102976105b6366004615162565b613596565b6102ea6135ff565b60055460009060ff16156105f25760405162461bcd60e51b81526004016105e990615a2c565b60405180910390fd5b6005805460ff19166001179055610607614ffa565b6106108561360f565b90506106358160c001516003670de0b6b3a76400008161062c57fe5b046001016136e4565b8411156106545760405162461bcd60e51b81526004016105e990615a88565b600061067b8260c0015183606001516001600160601b0316600254600a548960075461375d565b90508061069a5760405162461bcd60e51b81526004016105e990615832565b838111156106ba5760405162461bcd60e51b81526004016105e9906159d6565b6106c5863387613821565b6106d38260c0015186613910565b6001600160a01b0387166000908152600960205260409020600101556106f98287613949565b60006107068260006136e4565b9050866001600160a01b0316336001600160a01b03167fe74c91552b64c2e2e7bd255639e004e693bd3e1d01cc33e65610b86afcc1ffed8860405161074b9190615e7c565b60405180910390a361075d3383613adc565b61076f61076a8383613910565b613ae6565b60055461078a9061010090046001600160a01b031682613af2565b506005805460ff1916905595945050505050565b60055460609060ff16156107c45760405162461bcd60e51b81526004016105e990615a2c565b6060600880548060200260200160405190810160405280929190818152602001828054801561081c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107fe575b50505050509050805167ffffffffffffffff8111801561083b57600080fd5b50604051908082528060200260200182016040528015610865578160200160208202803683370190505b5091506000805b83518110156108fe57600083828151811061088357fe5b6020908102919091018101516001600160a01b03811660009081526009909252604090912054909150600160981b90046001600160601b0316156108f557808584806001019550815181106108d457fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b5060010161086c565b5082525090565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109915780601f1061096657610100808354040283529160200191610991565b820191906000526020600020905b81548152906001019060200180831161097457829003601f168201915b5050505050905090565b3360008181526001602090815260408083206001600160a01b03871680855292528083208590555191929091600080516020615f34833981519152906109e2908690615e7c565b60405180910390a35060015b92915050565b60055460009060ff1615610a1a5760405162461bcd60e51b81526004016105e990615a2c565b610a22614ffa565b610a2b84613afc565b509050610a36614ffa565b610a3f8461360f565b9050610a728260c0015183606001516001600160601b03168360c0015184606001516001600160601b0316600754613c4a565b95945050505050565b60025490565b60055461010090046001600160a01b031615610aaf5760405162461bcd60e51b81526004016105e990615c42565b6001600160a01b038516610ad55760405162461bcd60e51b81526004016105e990615d3d565b60058054610100600160a81b0319166101006001600160a01b038816021790556028670de0b6b3a764000004600755604080516020601f8601819004810282018101909252848152610b7591869086908190840183828082843760009201919091525050604080516020601f88018190048102820181019092528681529250869150859081908401838280828437600092019190915250613caf92505050565b5050505050565b6000336001600160a01b0385161480610bb857506001600160a01b03841660009081526001602090815260408083203384529091529020548211155b610bd45760405162461bcd60e51b81526004016105e9906159a7565b610bdf848484613d26565b336001600160a01b03851614801590610c1d57506001600160a01b038416600090815260016020908152604080832033845290915290205460001914155b15610ca3576001600160a01b0384166000908152600160209081526040808320338452909152902054610c509083613910565b6001600160a01b038581166000908152600160209081526040808320338085529252918290208490559051918616929091600080516020615f3483398151915291610c9a91615e7c565b60405180910390a35b5060019392505050565b6001600160a01b03811660009081526009602052604090205460ff165b919050565b60055461010090046001600160a01b031690565b60055460ff1615610d065760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff191660011790556001600160a01b0384166000908152600960205260409020805460ff16610d4c5760405162461bcd60e51b81526004016105e990615ab3565b6040516370a0823160e01b81526000906001600160a01b038716906370a0823190610d7b903090600401615613565b60206040518083038186803b158015610d9357600080fd5b505afa158015610da7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcb919061556e565b905084811015610ded5760405162461bcd60e51b81526004016105e990615926565b610df8868887613821565b6000610e06826007546136e4565b90506000610e148783613e0f565b604051630ed1000360e31b81529091506001600160a01b038a1690637688001890610e4b908b908b9086908c908c90600401615664565b600060405180830381600087803b158015610e6557600080fd5b505af1158015610e79573d6000803e3d6000fd5b50506040516370a0823160e01b8152600092506001600160a01b038b1691506370a0823190610eac903090600401615613565b60206040518083038186803b158015610ec457600080fd5b505afa158015610ed8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efc919061556e565b90508381118015610f0d5750818110155b610f295760405162461bcd60e51b81526004016105e990615a51565b600185018190558454610100900460ff1661108b576001600160a01b0389166000908152600b6020526040902054808210611089576001600160a01b038a166000818152600b6020526040808220829055885461ff001916610100178955517ff7bb8e57ffdfd9a31e7580ee84f68757f44fb4a8a913f44520d22f2da1c955e59190a26000610fb88383613910565b90506000610fc68284613e3b565b90506000610ff16004670de0b6b3a76400005b04610fec6703782dace9d90000856136e4565b613e0f565b8954600160381b600160981b031916600160381b6001600160601b0383169081029190911766ffffffffff00001916620100004264ffffffffff1602178b55600a549192506110409190613e0f565b600a5588546040516001600160a01b038f1691600080516020615f148339815191529161107d91600160381b90046001600160601b031690615ea1565b60405180910390a25050505b505b50506005805460ff191690555050505050505050565b601290565b60055461010090046001600160a01b031633146110d55760405162461bcd60e51b81526004016105e99061573b565b64e8d4a510008110156110fa5760405162461bcd60e51b81526004016105e99061585b565b67016345785d8a00008111156111225760405162461bcd60e51b81526004016105e990615ada565b60078190556040517fccfe595973efc7c1f6c29e31974d380470b9431d7770290185b7129419c7e63e90611157908390615e7c565b60405180910390a150565b60055460009060ff16156111885760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff1916600117905561119d614ffa565b6111a68561360f565b905060006111cf8260c0015183606001516001600160601b0316600254600a5489600754613ecf565b9050838110156111f15760405162461bcd60e51b81526004016105e9906158d6565b61120b8260c001516003670de0b6b3a76400008161062c57fe5b81111561122a5760405162461bcd60e51b81526004016105e990615a88565b611235863383613821565b6112438260c0015182613910565b6001600160a01b0387166000908152600960205260409020600101556112698287613949565b60006112768660006136e4565b9050866001600160a01b0316336001600160a01b03167fe74c91552b64c2e2e7bd255639e004e693bd3e1d01cc33e65610b86afcc1ffed846040516112bb9190615e7c565b60405180910390a36112cd3387613adc565b61076f61076a8783613910565b600c5490565b60055460009060ff16156113065760405162461bcd60e51b81526004016105e990615a2c565b61130e614ffa565b506001600160a01b038216600090815260096020908152604091829020825160e081018452815460ff80821615158084526101008304821615159584019590955264ffffffffff62010000830416958301959095526001600160601b03600160381b820481166060840152600160981b8204166080830152600160f81b900490931660a08401526001015460c08301526113ba5760405162461bcd60e51b81526004016105e990615ab3565b80602001516113e35750506001600160a01b0381166000908152600b6020526040902054610cca565b60c0015192915050565b60055460ff16156114105760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff19166001179055600654600160a01b900460ff166114465760405162461bcd60e51b81526004016105e990615b2a565b6000611450610a7b565b9050600061145e8583613e3b565b90508061147d5760405162461bcd60e51b81526004016105e990615832565b600854831461149e5760405162461bcd60e51b81526004016105e990615bd1565b600c5480156114d057806114b28488613e0f565b11156114d05760405162461bcd60e51b81526004016105e990615d67565b60005b848110156115f3576000600882815481106114ea57fe5b6000918252602090912001546001600160a01b03169050611509614ffa565b600061151483613afc565b915091506000611528878460c001516136e4565b9050806115475760405162461bcd60e51b81526004016105e990615832565b89898681811061155357fe5b905060200201358111156115795760405162461bcd60e51b81526004016105e9906159d6565b61158d84846115888585613e0f565b613f98565b836001600160a01b0316336001600160a01b03167f63982df10efd8dfaaaa0fcc7f50b2d93b7cba26ccc48adee2873220d485dc39a836040516115d09190615e7c565b60405180910390a36115e3843383614178565b5050600190920191506114d39050565b506115fd866141a3565b6116073387613af2565b50506005805460ff1916905550505050565b60055461010090046001600160a01b031633146116485760405162461bcd60e51b81526004016105e99061573b565b600c8190556040517f65492266ae9a1f46497efddd24b6946862569680a511c543590d4587ca800d0590611157908390615e7c565b60055460ff16156116a05760405162461bcd60e51b81526004016105e990615a2c565b60058054600160ff19909116179081905561010090046001600160a01b031633146116dd5760405162461bcd60e51b81526004016105e99061573b565b828181146116fd5760405162461bcd60e51b81526004016105e990615bd1565b60005b818110156116075761175286868381811061171757fe5b905060200201602081019061172c9190615162565b85858481811061173857fe5b905060200201602081019061174d91906155d0565b6141ac565b600101611700565b60055460009060ff16156117805760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff19166001179055600654600160a01b900460ff166117b65760405162461bcd60e51b81526004016105e990615b2a565b6117be614ffa565b60006117c986613afc565b9150915084600014156117ee5760405162461bcd60e51b81526004016105e990615dec565b61180e8260c001516002670de0b6b3a76400008161180857fe5b046136e4565b85111561182d5760405162461bcd60e51b81526004016105e9906157dd565b60006118548360c0015184606001516001600160601b0316600254600a548a6007546142c9565b600c54909150801561188b578061186d60025484613e0f565b111561188b5760405162461bcd60e51b81526004016105e990615d67565b858210156118ab5760405162461bcd60e51b81526004016105e9906158d6565b6118ba8885611588868b613e0f565b876001600160a01b0316336001600160a01b03167f63982df10efd8dfaaaa0fcc7f50b2d93b7cba26ccc48adee2873220d485dc39a896040516118fd9190615e7c565b60405180910390a361190e826141a3565b6119183383613af2565b611923883389614178565b506005805460ff191690559695505050505050565b611940614ffa565b60055460ff16156119635760405162461bcd60e51b81526004016105e990615a2c565b506001600160a01b038116600090815260096020908152604091829020825160e081018452815460ff80821615158084526101008304821615159584019590955264ffffffffff62010000830416958301959095526001600160601b03600160381b820481166060840152600160981b8204166080830152600160f81b900490931660a08401526001015460c0830152610cca5760405162461bcd60e51b81526004016105e990615ab3565b3360009081526001602090815260408083206001600160a01b038616845290915281205480831115611a64573360009081526001602090815260408083206001600160a01b0388168452909152812055611a93565b611a6e8184613910565b3360009081526001602090815260408083206001600160a01b03891684529091529020555b3360008181526001602090815260408083206001600160a01b038916808552925291829020549151909291600080516020615f3483398151915291610c9a9190615e7c565b60055460009060ff1615611afe5760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff19166001179055600654600160a01b900460ff16611b345760405162461bcd60e51b81526004016105e990615b2a565b600c548015611b685780611b4a60025486613e0f565b1115611b685760405162461bcd60e51b81526004016105e990615d67565b611b70614ffa565b6000611b7b87613afc565b915091506000611ba68360c0015184606001516001600160601b0316600254600a548b600754614365565b905080611bc55760405162461bcd60e51b81526004016105e990615832565b85811115611be55760405162461bcd60e51b81526004016105e9906159d6565b611bff8360c001516002670de0b6b3a76400008161180857fe5b811115611c1e5760405162461bcd60e51b81526004016105e9906157dd565b611c2d88846115888585613e0f565b876001600160a01b0316336001600160a01b03167f63982df10efd8dfaaaa0fcc7f50b2d93b7cba26ccc48adee2873220d485dc39a83604051611c709190615e7c565b60405180910390a3611c81876141a3565b611c8b3388613af2565b611c96883383614178565b6005805460ff19169055979650505050505050565b6001600160a01b031660009081526020819052604090205490565b600554600090819060ff1615611cee5760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff19166001179055600654600160a01b900460ff16611d245760405162461bcd60e51b81526004016105e990615b2a565b611d2c614ffa565b6000611d3789613afc565b91509150611d43614ffa565b611d4c8861360f565b9050611d688160c001516003670de0b6b3a76400008161062c57fe5b871115611d875760405162461bcd60e51b81526004016105e990615a88565b6000611dba8460c0015185606001516001600160601b03168460c0015185606001516001600160601b0316600754613c4a565b905086811115611ddc5760405162461bcd60e51b81526004016105e990615b52565b6000611e108560c0015186606001516001600160601b03168560c0015186606001516001600160601b03168d6007546143ff565b90508a811115611e325760405162461bcd60e51b81526004016105e9906159d6565b611e3d8c3383614178565b611e488a338b613821565b611e528482613e0f565b9350611e5f8c8686613f98565b846020015115611e715760c085018490525b611e7f8360c001518a613910565b60c084018190526001600160a01b038b16600090815260096020526040902060010155611eac838b613949565b6000611edf8660c0015187606001516001600160601b03168660c0015187606001516001600160601b0316600754613c4a565b905082811015611f015760405162461bcd60e51b81526004016105e990615832565b88811115611f215760405162461bcd60e51b81526004016105e990615c19565b611f2b828b613e3b565b831115611f4a5760405162461bcd60e51b81526004016105e990615832565b8a6001600160a01b03168d6001600160a01b0316336001600160a01b03167f908fb5ee8f16c6bc9bc3690973819f32a4d4b10188134543c88706e0e1d43378858e604051611f99929190615e85565b60405180910390a46005805460ff19169055909c909b509950505050505050505050565b600081565b600554600090819060ff1615611fea5760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff19166001179055600654600160a01b900460ff166120205760405162461bcd60e51b81526004016105e990615b2a565b612028614ffa565b600061203389613afc565b9150915061203f614ffa565b6120488861360f565b90506120648360c001516002670de0b6b3a76400008161180857fe5b8911156120835760405162461bcd60e51b81526004016105e9906157dd565b60006120b68460c0015185606001516001600160601b03168460c0015185606001516001600160601b0316600754613c4a565b9050868111156120d85760405162461bcd60e51b81526004016105e990615b52565b600061210c8560c0015186606001516001600160601b03168560c0015186606001516001600160601b03168f600754614482565b90508881101561212e5760405162461bcd60e51b81526004016105e9906158d6565b6121398c338d614178565b6121448a3383613821565b61214e848c613e0f565b935061215b8c8686613f98565b84602001511561216d5760c085018490525b61217b8360c0015182613910565b60c084018190526001600160a01b038b166000908152600960205260409020600101556121a8838b613949565b60006121db8660c0015187606001516001600160601b03168660c0015187606001516001600160601b0316600754613c4a565b9050828110156121fd5760405162461bcd60e51b81526004016105e990615807565b8881111561221d5760405162461bcd60e51b81526004016105e990615c19565b6122278c83613e3b565b8311156122465760405162461bcd60e51b81526004016105e990615832565b8a6001600160a01b03168d6001600160a01b0316336001600160a01b03167f908fb5ee8f16c6bc9bc3690973819f32a4d4b10188134543c88706e0e1d433788f86604051611f99929190615e85565b60055460ff16156122b85760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff191660011790556001600160a01b03811660008181526009602052604080822090516370a0823160e01b81529092906370a0823190612301903090600401615613565b60206040518083038186803b15801561231957600080fd5b505afa15801561232d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612351919061556e565b825490915060ff16156124c8578154610100900460ff166124a5576001600160a01b0383166000908152600b60205260409020548082106124a3576001600160a01b0384166000818152600b6020526040808220829055855461ff001916610100178655517ff7bb8e57ffdfd9a31e7580ee84f68757f44fb4a8a913f44520d22f2da1c955e59190a260006123e68383613910565b905060006123f48284613e3b565b9050600061240b6004670de0b6b3a7640000610fd9565b8654600160381b600160981b031916600160381b6001600160601b0383169081029190911766ffffffffff00001916620100004264ffffffffff1602178855600a5491925061245a9190613e0f565b600a5585546040516001600160a01b03891691600080516020615f148339815191529161249791600160381b90046001600160601b031690615ea1565b60405180910390a25050505b505b6001600160a01b0383166000908152600960205260409020600101819055612545565b6006546124e09084906001600160a01b031683613821565b6006546040516360b8257960e11b81526001600160a01b039091169063c1704af290612512908690859060040161564b565b600060405180830381600087803b15801561252c57600080fd5b505af1158015612540573d6000803e3d6000fd5b505050505b50506005805460ff1916905550565b60055460009060ff161561257a5760405162461bcd60e51b81526004016105e990615a2c565b612582614ffa565b506001600160a01b038216600090815260096020908152604091829020825160e081018452815460ff80821615158084526101008304821615159584019590955264ffffffffff62010000830416958301959095526001600160601b03600160381b820481166060840152600160981b8204166080830152600160f81b900490931660a08401526001015460c083015261262e5760405162461bcd60e51b81526004016105e990615ab3565b8060200151156126505760405162461bcd60e51b81526004016105e990615bf6565b50506001600160a01b03166000908152600b602052604090205490565b60055460009060ff16156126935760405162461bcd60e51b81526004016105e990615a2c565b50600a5490565b60055460009060ff16156126c05760405162461bcd60e51b81526004016105e990615a2c565b6001600160a01b03821660009081526009602052604090205460ff166126f85760405162461bcd60e51b81526004016105e990615ab3565b506001600160a01b0316600090815260096020526040902054600160381b90046001600160601b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109915780601f1061096657610100808354040283529160200191610991565b600554600090819060ff16156127ad5760405162461bcd60e51b81526004016105e990615a2c565b6008546000908190815b8181101561285e57600881815481106127cc57fe5b60009182526020808320909101546001600160a01b03168083526009909152604090912080549195509060ff61010090910416801561281b57508054600160981b90046001600160601b031615155b15612855576001810154600a54825461284d929161284891600160381b90046001600160601b0316613e3b565b6136e4565b93505061285e565b506001016127b7565b506000821161287f5760405162461bcd60e51b81526004016105e990615767565b5090925090509091565b60055461010090046001600160a01b031633146128b85760405162461bcd60e51b81526004016105e99061573b565b600854156128d85760405162461bcd60e51b81526004016105e990615954565b8660028110156128fa5760405162461bcd60e51b81526004016105e990615d94565b600a81111561291b5760405162461bcd60e51b81526004016105e9906157b5565b858114801561292957508381145b6129455760405162461bcd60e51b81526004016105e990615bd1565b6000805b82811015612c215760008b8b8381811061295f57fe5b90506020020160208101906129749190615162565b9050600088888481811061298457fe5b905060200201602081019061299991906155d0565b905060008b8b858181106129a957fe5b9050602002013590506004670de0b6b3a7640000816129c457fe5b04826001600160601b031610156129ed5760405162461bcd60e51b81526004016105e990615b7f565b68015af1d78b58c400006001600160601b0383161115612a1f5760405162461bcd60e51b81526004016105e990615880565b620f4240811015612a425760405162461bcd60e51b81526004016105e9906158fd565b6040518060e001604052806001151581526020016001151581526020014264ffffffffff168152602001836001600160601b03168152602001836001600160601b031681526020018560ff1681526020018281525060096000856001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548164ffffffffff021916908364ffffffffff16021790555060608201518160000160076101000a8154816001600160601b0302191690836001600160601b0316021790555060808201518160000160136101000a8154816001600160601b0302191690836001600160601b0316021790555060a082015181600001601f6101000a81548160ff021916908360ff16021790555060c082015181600101559050506008839080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b03160217905550612c0985836001600160601b0316613e0f565b9450612c16838983614178565b505050600101612949565b50680168d28e3f00280000811115612c4b5760405162461bcd60e51b81526004016105e9906158a8565b600a8190556006805460ff60a01b1916600160a01b1790556040517f183bed17d33ee5be9a47bb997aee6a152d84a34309cdb66f76301de0a40a138990600090a1612c9e68056bc75e2d631000006141a3565b612cb18468056bc75e2d63100000613af2565b5050600680546001600160a01b0319166001600160a01b039290921691909117905550505050505050565b60055461010090046001600160a01b03163314612d0b5760405162461bcd60e51b81526004016105e99061573b565b6001600160a01b0382166000908152600960205260409020805460ff16612d445760405162461bcd60e51b81526004016105e990615ab3565b8054610100900460ff1615612d6b5760405162461bcd60e51b81526004016105e990615bf6565b6001600160a01b0383166000908152600b602052604090819020839055517e0c7a55677231b335e6dea005fa240ac2aeafbd62f188372a7d66892b722c5290612db7908590859061564b565b60405180910390a1505050565b6000612dd1338484613d26565b50600192915050565b60055460ff1615612dfd5760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff191660011790556008548114612e2b5760405162461bcd60e51b81526004016105e990615bd1565b6000612e35610a7b565b90506000612e448560006136e4565b90506000612e528683613910565b90506000612e608285613e3b565b905080612e7f5760405162461bcd60e51b81526004016105e990615832565b612e893388613adc565b600554612ea49061010090046001600160a01b031684613af2565b612ead82613ae6565b60005b8581101561309057600060088281548110612ec757fe5b6000918252602090912001546001600160a01b03169050612ee6614ffa565b506001600160a01b038116600090815260096020908152604091829020825160e081018452815460ff80821615158352610100820481161580159584019590955264ffffffffff62010000830416958301959095526001600160601b03600160381b820481166060840152600160981b8204166080830152600160f81b900490931660a08401526001015460c0830152613054576000612f8a858360c001516136e4565b905080612fa95760405162461bcd60e51b81526004016105e990615832565b898985818110612fb557fe5b90506020020135811015612fdb5760405162461bcd60e51b81526004016105e9906158d6565b612fe98260c0015182613910565b6001600160a01b0384166000818152600960205260409081902060010192909255905133907fe74c91552b64c2e2e7bd255639e004e693bd3e1d01cc33e65610b86afcc1ffed9061303b908590615e7c565b60405180910390a361304e833383613821565b50613086565b88888481811061306057fe5b905060200201356000146130865760405162461bcd60e51b81526004016105e990615aff565b5050600101612eb0565b50506005805460ff19169055505050505050565b60055460ff16156130c75760405162461bcd60e51b81526004016105e990615a2c565b60058054600160ff19909116179081905561010090046001600160a01b031633146131045760405162461bcd60e51b81526004016105e99061573b565b84838114801561311357508181145b61312f5760405162461bcd60e51b81526004016105e990615bd1565b60085460608167ffffffffffffffff8111801561314b57600080fd5b50604051908082528060200260200182016040528015613175578160200160208202803683370190505b50905060608367ffffffffffffffff8111801561319157600080fd5b506040519080825280602002602001820160405280156131cb57816020015b6131b8614ffa565b8152602001906001900390816131b05790505b50905060005b8481101561330657600960008c8c848181106131e957fe5b90506020020160208101906131fe9190615162565b6001600160a01b031681526020808201929092526040908101600020815160e081018352815460ff808216151583526101008204811615159583019590955264ffffffffff62010000820416938201939093526001600160601b03600160381b840481166060830152600160981b8404166080820152600160f81b90920490921660a082015260019091015460c0820152825183908390811061329d57fe5b60200260200101819052508181815181106132b457fe5b602002602001015160000151156132fe576001838383815181106132d457fe5b602002602001015160a0015160ff16815181106132ed57fe5b911515602092830291909101909101525b6001016131d1565b5060005b8381101561335c5782818151811061331e57fe5b6020026020010151613354576133546008828154811061333a57fe5b60009182526020822001546001600160a01b0316906141ac565b60010161330a565b5060005b848110156134285760008b8b8381811061337657fe5b905060200201602081019061338b9190615162565b905060008a8a8481811061339b57fe5b90506020020160208101906133b091906155d0565b90506703782dace9d900006001600160601b03821610156133d657506703782dace9d900005b8383815181106133e257fe5b6020026020010151600001516134145761340f828a8a8681811061340257fe5b9050602002013583614503565b61341e565b61341e82826141ac565b5050600101613360565b50506005805460ff19169055505050505050505050565b60055460609060ff16156134655760405162461bcd60e51b81526004016105e990615a2c565b600880548060200260200160405190810160405280929190818152602001828054801561099157602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161349d575050505050905090565b60085490565b60055460009060ff16156134f05760405162461bcd60e51b81526004016105e990615a2c565b5060075490565b3360009081526001602090815260408083206001600160a01b03861684529091528120546135259083613e0f565b3360008181526001602090815260408083206001600160a01b03891680855292529182902084905590519092600080516020615f34833981519152916109e29190615e7c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60055460009060ff16156135bc5760405162461bcd60e51b81526004016105e990615a2c565b6001600160a01b0382166000908152600960205260409020805460ff166135f55760405162461bcd60e51b81526004016105e990615ab3565b6001015492915050565b600654600160a01b900460ff1690565b613617614ffa565b506001600160a01b038116600090815260096020908152604091829020825160e081018452815460ff80821615158084526101008304821615159584019590955264ffffffffff62010000830416958301959095526001600160601b03600160381b820481166060840152600160981b8204166080830152600160f81b900490931660a08401526001015460c08301526136c35760405162461bcd60e51b81526004016105e990615ab3565b8060200151610cca5760405162461bcd60e51b81526004016105e990615aff565b60008282028315806136fe5750828482816136fb57fe5b04145b61371a5760405162461bcd60e51b81526004016105e990615ba7565b6706f05b59d3b200008101818110156137455760405162461bcd60e51b81526004016105e990615ba7565b6000670de0b6b3a7640000825b049695505050505050565b60008061376a8786613e3b565b90506000613780670de0b6b3a764000083613910565b9050600061378e82866136e4565b905060006137ad876137a8670de0b6b3a764000085613910565b613e3b565b905060006137bb8c83613910565b905060006137c9828e613e3b565b905060006137d782886147e3565b905060006137e5828e6136e4565b905060006137f38e83613910565b905061380c816137a8670de0b6b3a76400006000613910565b99505050505050505050509695505050505050565b60006060846001600160a01b031663a9059cbb60e01b858560405160240161384a92919061564b565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161388891906155f7565b6000604051808303816000865af19150503d80600081146138c5576040519150601f19603f3d011682016040523d82523d6000602084013e6138ca565b606091505b50915091508180156138f45750805115806138f45750808060200190518101906138f49190615536565b610b755760405162461bcd60e51b81526004016105e990615cbf565b600080600061391f8585614896565b9150915080156139415760405162461bcd60e51b81526004016105e990615ce8565b509392505050565b81608001516001600160601b031682606001516001600160601b031611158061397457508160200151155b8061398d5750610e10826040015164ffffffffff164203105b1561399757613ad8565b6060820151608083015160006139c06001600160601b0384166064670de0b6b3a7640000611808565b905060006139e0846001600160601b0316846001600160601b0316613910565b905081811115613a03576139fd846001600160601b031683613910565b92508190505b6703782dace9d900006001600160601b03841611613a3d57600a5460009350613a2c9084613910565b600a55613a38856148bb565b613ad3565b613a49600a5482613910565b600a556001600160601b038316606087018190526001600160a01b038616600081815260096020526040908190208054600160381b600160981b031916600160381b9094029390931766ffffffffff00001916620100004264ffffffffff1602179092559051600080516020615f1483398151915290613aca908690615ea1565b60405180910390a25b505050505b5050565b613ad88282614bfd565b613aef81614c08565b50565b613ad88282614cb1565b613b04614ffa565b506001600160a01b0381166000908152600960209081526040808320815160e081018352815460ff80821615158084526101008304821615159684019690965264ffffffffff62010000830416948301949094526001600160601b03600160381b820481166060840152600160981b8204166080830152600160f81b900490921660a08301526001015460c08201529190613bb15760405162461bcd60e51b81526004016105e990615ab3565b5060c08101516020820151613c45576001600160a01b0383166000908152600b602052604081205460c08401819052613bf890613bee9084613910565b8460c00151613e3b565b90506000613c1c600a6004670de0b6b3a76400005b0481613c1557fe5b04836136e4565b9050613c346004670de0b6b3a76400005b0482613e0f565b6001600160601b0316606085015250505b915091565b600080613c578787613e3b565b90506000613c658686613e3b565b90506000613c738383613e3b565b90506000613c95670de0b6b3a76400006137a8670de0b6b3a764000089613910565b9050613ca182826136e4565b9a9950505050505050505050565b60035460026000196101006001841615020190911604158015613cd25750815115155b8015613cde5750805115155b613cfa5760405162461bcd60e51b81526004016105e9906159fc565b8151613d0d906003906020850190615036565b508051613d21906004906020840190615036565b505050565b6001600160a01b038316600090815260208190526040902054811115613d5e5760405162461bcd60e51b81526004016105e990615926565b6001600160a01b038316600090815260208190526040902054613d819082613910565b6001600160a01b038085166000908152602081905260408082209390935590841681522054613db09082613e0f565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90613e02908590615e7c565b60405180910390a3505050565b600082820183811015613e345760405162461bcd60e51b81526004016105e990615d13565b9392505050565b600081613e5a5760405162461bcd60e51b81526004016105e990615c6a565b670de0b6b3a76400008302831580613e825750670de0b6b3a7640000848281613e7f57fe5b04145b613e9e5760405162461bcd60e51b81526004016105e99061597d565b60028304810181811015613ec45760405162461bcd60e51b81526004016105e99061597d565b600084828161375257fe5b600080613edc8786613e3b565b90506000613ef785612848670de0b6b3a76400006000613910565b90506000613f058883613910565b90506000613f13828a613e3b565b90506000613f3282613f2d670de0b6b3a764000088613e3b565b6147e3565b90506000613f40828e6136e4565b90506000613f4e8e83613910565b90506000613f6d613f67670de0b6b3a76400008a613910565b8b6136e4565b9050613f8582612848670de0b6b3a764000084613910565b9f9e505050505050505050505050505050565b816020015161414b578160c0015181106140f4576001600160a01b0383166000818152600b6020908152604080832083905560098252808320805461ff001916610100179055600191860191909152517ff7bb8e57ffdfd9a31e7580ee84f68757f44fb4a8a913f44520d22f2da1c955e59190a2600061401c828460c00151613910565b9050600061402e828560c00151613e3b565b90506140466703782dace9d90000610fec81846136e4565b6001600160601b03908116606086018181526001600160a01b03881660009081526009602052604090208054600160381b600160981b031916600160381b9093029290921766ffffffffff00001916620100004264ffffffffff160217909155600a5490516140b59216613e0f565b600a5560608401516040516001600160a01b03871691600080516020615f14833981519152916140e59190615ea1565b60405180910390a25050614146565b6000614107613bee8460c0015184613910565b90506000614120600a6004670de0b6b3a7640000613c0d565b90506141356004670de0b6b3a7640000613c2d565b6001600160601b0316606085015250505b614155565b6141558284614cbc565b6001600160a01b0390921660009081526009602052604090206001019190915550565b60006060846001600160a01b03166323b872dd60e01b85308660405160240161384a93929190615627565b613aef81614e2d565b6001600160a01b0382166000908152600960205260409020805460ff166141e55760405162461bcd60e51b81526004016105e990615ab3565b6703782dace9d900006001600160601b03831610158061420c57506001600160601b038216155b6142285760405162461bcd60e51b81526004016105e990615b7f565b68015af1d78b58c400006001600160601b038316111561425a5760405162461bcd60e51b81526004016105e990615880565b80546bffffffffffffffffffffffff60981b1916600160981b6001600160601b038416021781556040516001600160a01b038416907fc7ea88f3376e27ce6ebc2025310023327f743a8377d438258c36b166dd8b2983906142bc908590615ea1565b60405180910390a2505050565b6000806142d68786613e3b565b905060006142f56142ef670de0b6b3a764000084613910565b856136e4565b9050600061430f86612848670de0b6b3a764000085613910565b9050600061431d8b83613e0f565b9050600061432b828d613e3b565b9050600061433982876147e3565b90506000614347828d6136e4565b9050614353818d613910565b9e9d5050505050505050505050505050565b6000806143728786613e3b565b905060006143808786613e0f565b9050600061438e8289613e3b565b905060006143a4670de0b6b3a764000085613e3b565b905060006143b283836147e3565b905060006143c0828e6136e4565b905060006143ce828f613910565b905060006143e7613f67670de0b6b3a76400008a613910565b9050613f85826137a8670de0b6b3a764000084613910565b60008061440c8588613e3b565b9050600061441a8786613910565b905060006144288883613e3b565b9050600061443682856147e3565b905061444a81670de0b6b3a7640000613910565b905061445e670de0b6b3a764000087613910565b945061447361446d8c836136e4565b86613e3b565b9b9a5050505050505050505050565b60008061448f8786613e3b565b905060006144a5670de0b6b3a764000085613910565b90506144b185826136e4565b905060006144c38a6137a88c85613e0f565b905060006144d182856147e3565b905060006144e7670de0b6b3a764000083613910565b90506144f38a826136e4565b9c9b505050505050505050505050565b6001600160a01b03831660009081526009602052604090205460ff161561453c5760405162461bcd60e51b81526004016105e99061578f565b6703782dace9d900006001600160601b038216101561456d5760405162461bcd60e51b81526004016105e990615b7f565b68015af1d78b58c400006001600160601b038216111561459f5760405162461bcd60e51b81526004016105e990615880565b620f42408210156145c25760405162461bcd60e51b81526004016105e9906158fd565b6040518060e00160405280600115158152602001600015158152602001600064ffffffffff16815260200160006001600160601b03168152602001826001600160601b0316815260200160088054905060ff168152602001600081525060096000856001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548164ffffffffff021916908364ffffffffff16021790555060608201518160000160076101000a8154816001600160601b0302191690836001600160601b0316021790555060808201518160000160136101000a8154816001600160601b0302191690836001600160601b0316021790555060a082015181600001601f6101000a81548160ff021916908360ff16021790555060c082015181600101559050506008839080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600b6000856001600160a01b03166001600160a01b0316815260200190815260200160002081905550826001600160a01b03167fb2daf560899f6307b318aecfb57eb2812c488da4a4c1cad2019b482fa63294ed82846040516142bc929190615eb5565b600060018310156148065760405162461bcd60e51b81526004016105e990615c90565b671bc16d674ec7ffff83111561482e5760405162461bcd60e51b81526004016105e990615dbc565b600061483983614e9c565b905060006148478483613910565b9050600061485d8661485885614eb7565b614ec5565b90508161486e5792506109ee915050565b600061487f87846305f5e100614f1c565b905061488b82826136e4565b979650505050505050565b6000808284106148ac57505080820360006148b4565b505081810360015b9250929050565b6148c3614ffa565b506001600160a01b038116600090815260096020908152604091829020825160e081018452815460ff808216151583526101008204811615159483019490945264ffffffffff62010000820416948201949094526001600160601b03600160381b850481166060830152600160981b8504166080820152600160f81b90930490911660a0830181905260019091015460c0830181905260085490919060001901808214614a21576008818154811061497757fe5b600091825260209091200154600880546001600160a01b03909216918490811061499d57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508160096000600885815481106149dd57fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020805460ff92909216600160f81b026001600160f81b039092169190911790555b6008805480614a2c57fe5b60008281526020808220600019908401810180546001600160a01b03191690559092019092556040805160e081018252838152808301848152818301858152606083018681526080840187815260a0850188815260c086018981526001600160a01b038f81168b52600990995296909820945185549451935192519151985160ff199095169015151761ff001916610100931515939093029290921766ffffffffff000019166201000064ffffffffff9092169190910217600160381b600160981b031916600160381b6001600160601b0392831602176bffffffffffffffffffffffff60981b1916600160981b9190961602949094176001600160f81b0316600160f81b60ff909516949094029390931783555160019290920191909155600654614b5b9187911685613821565b6006546040516360b8257960e11b81526001600160a01b039091169063c1704af290614b8d908890879060040161564b565b600060405180830381600087803b158015614ba757600080fd5b505af1158015614bbb573d6000803e3d6000fd5b505050507f12a8262eb28ee8a8c11e6cf411b3af6ce5bea42abb36e051bf0a65ae602d52ec85604051614bee9190615613565b60405180910390a15050505050565b613ad8823083613d26565b30600090815260208190526040902054811115614c375760405162461bcd60e51b81526004016105e990615926565b30600090815260208190526040902054614c519082613910565b30600090815260208190526040902055600254614c6e9082613910565b60025560405160009030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90614ca6908590615e7c565b60405180910390a350565b613ad8308383613d26565b81608001516001600160601b031682606001516001600160601b0316101580614ce757508160200151155b80614d005750610e10826040015164ffffffffff164203105b15614d0a57613ad8565b606082015160808301516000614d336001600160601b0384166064670de0b6b3a7640000611808565b90506000614d53836001600160601b0316856001600160601b0316613910565b905081811115614d7657614d70846001600160601b031683613e0f565b92508190505b614d82600a5482613e0f565b600a819055680168d28e3f002800001015614daf5760405162461bcd60e51b81526004016105e9906158a8565b6001600160601b038316606087018190526001600160a01b038616600081815260096020526040908190208054600160381b600160981b031916600160381b9094029390931766ffffffffff00001916620100004264ffffffffff1602179092559051600080516020615f1483398151915290613aca908690615ea1565b30600090815260208190526040902054614e479082613e0f565b30600090815260208190526040902055600254614e649082613e0f565b60025560405130906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90614ca6908590615e7c565b6000670de0b6b3a7640000614eb083614eb7565b0292915050565b670de0b6b3a7640000900490565b60008060028306614ede57670de0b6b3a7640000614ee0565b835b90506002830492505b8215613e3457614ef984856136e4565b93506002830615614f1157614f0e81856136e4565b90505b600283049250614ee9565b6000828180614f3387670de0b6b3a7640000614896565b9092509050670de0b6b3a764000080600060015b888410614feb576000670de0b6b3a764000082029050600080614f7b8a614f7685670de0b6b3a7640000613910565b614896565b91509150614f8d87612848848c6136e4565b9650614f998784613e3b565b965086614fa857505050614feb565b8715614fb2579315935b8015614fbc579315935b8415614fd357614fcc8688613910565b9550614fe0565b614fdd8688613e0f565b95505b505050600101614f47565b50909998505050505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061507757805160ff19168380011785556150a4565b828001600101855582156150a4579182015b828111156150a4578251825591602001919060010190615089565b506150b09291506150b4565b5090565b5b808211156150b057600081556001016150b5565b80356001600160a01b03811681146109ee57600080fd5b60008083601f8401126150f1578182fd5b50813567ffffffffffffffff811115615108578182fd5b60208301915083602080830285010111156148b457600080fd5b60008083601f840112615133578182fd5b50813567ffffffffffffffff81111561514a578182fd5b6020830191508360208285010111156148b457600080fd5b600060208284031215615173578081fd5b613e3483836150c9565b6000806040838503121561518f578081fd5b61519984846150c9565b91506151a884602085016150c9565b90509250929050565b6000806000606084860312156151c5578081fd5b83356151d081615efe565b925060208401356151e081615efe565b929592945050506040919091013590565b600080600080600060808688031215615208578081fd5b61521287876150c9565b945061522187602088016150c9565b935060408601359250606086013567ffffffffffffffff811115615243578182fd5b61524f88828901615122565b969995985093965092949392505050565b600080600080600060608688031215615277578081fd5b853561528281615efe565b9450602086013567ffffffffffffffff8082111561529e578283fd5b6152aa89838a01615122565b909650945060408801359150808211156152c2578283fd5b5061524f88828901615122565b600080604083850312156152e1578182fd5b6152eb84846150c9565b946020939093013593505050565b600080600080600060a08688031215615310578081fd5b61531a87876150c9565b94506020860135935061533087604088016150c9565b94979396509394606081013594506080013592915050565b60008060006060848603121561535c578283fd5b61536685856150c9565b95602085013595506040909401359392505050565b60008060008060008060008060a0898b031215615396578283fd5b883567ffffffffffffffff808211156153ad578485fd5b6153b98c838d016150e0565b909a50985060208b01359150808211156153d1578485fd5b6153dd8c838d016150e0565b909850965060408b01359150808211156153f5578485fd5b506154028b828c016150e0565b909550935050606089013561541681615efe565b9150608089013561542681615efe565b809150509295985092959890939650565b6000806000806040858703121561544c578182fd5b843567ffffffffffffffff80821115615463578384fd5b61546f888389016150e0565b90965094506020870135915080821115615487578384fd5b50615494878288016150e0565b95989497509550505050565b600080600080600080606087890312156154b8578384fd5b863567ffffffffffffffff808211156154cf578586fd5b6154db8a838b016150e0565b909850965060208901359150808211156154f3578586fd5b6154ff8a838b016150e0565b90965094506040890135915080821115615517578384fd5b5061552489828a016150e0565b979a9699509497509295939492505050565b600060208284031215615547578081fd5b81518015158114613e34578182fd5b600060208284031215615567578081fd5b5035919050565b60006020828403121561557f578081fd5b5051919050565b60008060006040848603121561559a578081fd5b83359250602084013567ffffffffffffffff8111156155b7578182fd5b6155c3868287016150e0565b9497909650939450505050565b6000602082840312156155e1578081fd5b81356001600160601b0381168114613e34578182fd5b60008251615609818460208701615ece565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b038716825285602083015284604083015260806060830152826080830152828460a084013781830160a090810191909152601f909201601f19160101949350505050565b6020808252825182820181905260009190848201906040850190845b818110156156f15783516001600160a01b0316835292840192918401916001016156cc565b50909695505050505050565b901515815260200190565b6000602082528251806020840152615727816040850160208701615ece565b601f01601f19169190910160400192915050565b60208082526012908201527122a9292fa727aa2fa1a7a72a2927a62622a960711b604082015260600190565b6020808252600e908201526d4552525f4e4f4e455f524541445960901b604082015260600190565b6020808252600c908201526b11549497d254d7d093d5539160a21b604082015260600190565b6020808252600e908201526d4552525f4d41585f544f4b454e5360901b604082015260600190565b60208082526010908201526f4552525f4d41585f494e5f524154494f60801b604082015260600190565b60208082526011908201527022a9292fa6a0aa242fa0a8282927ac2f9960791b604082015260600190565b6020808252600f908201526e08aa4a4be9a82a890be82a0a0a49eb608b1b604082015260600190565b6020808252600b908201526a4552525f4d494e5f46454560a81b604082015260600190565b6020808252600e908201526d11549497d3505617d5d15251d21560921b604082015260600190565b60208082526014908201527311549497d3505617d513d5105317d5d15251d21560621b604082015260600190565b6020808252600d908201526c11549497d31253525517d3d555609a1b604082015260600190565b6020808252600f908201526e4552525f4d494e5f42414c414e434560881b604082015260600190565b60208082526014908201527311549497d25394d551919250d251539517d0905360621b604082015260600190565b6020808252600f908201526e11549497d253925512505312569151608a1b604082015260600190565b60208082526010908201526f11549497d1125597d25395115493905360821b604082015260600190565b60208082526015908201527422a9292fa12a27a5a2a72fa120a22fa1a0a62622a960591b604082015260600190565b6020808252600c908201526b22a9292fa624a6a4aa2fa4a760a11b604082015260600190565b60208082526016908201527511549497d09513d2d15397d25392551250531256915160521b604082015260600190565b6020808252600b908201526a4552525f5245454e54525960a81b604082015260600190565b60208082526018908201527f4552525f494e53554646494349454e545f5041594d454e540000000000000000604082015260600190565b6020808252601190820152704552525f4d41585f4f55545f524154494f60781b604082015260600190565b6020808252600d908201526c11549497d393d517d093d55391609a1b604082015260600190565b6020808252600b908201526a4552525f4d41585f46454560a81b604082015260600190565b6020808252601190820152704552525f4f55545f4e4f545f524541445960781b604082015260600190565b6020808252600e908201526d4552525f4e4f545f5055424c494360901b604082015260600190565b6020808252601390820152724552525f4241445f4c494d49545f505249434560681b604082015260600190565b6020808252600e908201526d11549497d3525397d5d15251d21560921b604082015260600190565b60208082526010908201526f4552525f4d554c5f4f564552464c4f5760801b604082015260600190565b6020808252600b908201526a22a9292fa0a9292fa622a760a91b604082015260600190565b6020808252600990820152684552525f524541445960b81b604082015260600190565b6020808252600f908201526e4552525f4c494d49545f505249434560881b604082015260600190565b6020808252600e908201526d11549497d0d3d3919251d554915160921b604082015260600190565b6020808252600c908201526b4552525f4449565f5a45524f60a01b604082015260600190565b6020808252601590820152744552525f42504f575f424153455f544f4f5f4c4f5760581b604082015260600190565b6020808252600f908201526e4552525f45524332305f46414c534560881b604082015260600190565b6020808252601190820152704552525f5355425f554e444552464c4f5760781b604082015260600190565b60208082526010908201526f4552525f4144445f4f564552464c4f5760801b604082015260600190565b60208082526010908201526f4552525f4e554c4c5f4144445245535360801b604082015260600190565b6020808252601390820152724552525f4d41585f504f4f4c5f544f4b454e5360681b604082015260600190565b6020808252600e908201526d4552525f4d494e5f544f4b454e5360901b604082015260600190565b60208082526016908201527508aa4a4be84a09eaebe8482a68abea89e9ebe90928e960531b604082015260600190565b6020808252600b908201526a22a9292fad22a927afa4a760a91b604082015260600190565b600060e08201905082511515825260208301511515602083015264ffffffffff604084015116604083015260608301516001600160601b038082166060850152806080860151166080850152505060ff60a08401511660a083015260c083015160c083015292915050565b90815260200190565b918252602082015260400190565b60ff91909116815260200190565b6001600160601b0391909116815260200190565b6001600160601b03929092168252602082015260400190565b60005b83811015615ee9578181015183820152602001615ed1565b83811115615ef8576000848401525b50505050565b6001600160a01b0381168114613aef57600080fdfe21b12aed5d425f5675450ffeeae01039085e5323974c3099e1828155d9b51e778c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a2646970667358221220ce0356f90a45ef5320d6098f1fa763f1de09c2ba2a7a7a0646639e8a66d62c5c64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061027f5760003560e01c80636d06dfa01161015c578063a20cfa75116100ce578063cd2ed8fb11610087578063cd2ed8fb14610572578063d4cadf681461057a578063d73dd62314610582578063dd62ed3e14610595578063f8b2cb4f146105a8578063fde924f7146105bb5761027f565b8063a20cfa751461050b578063a49c44d71461051e578063a9059cbb14610531578063b02f0b7314610544578063c3f4681014610557578063cc77828d1461056a5761027f565b80638c28cbe8116101205780638c28cbe8146104ac57806391bfa2bf146104bf578063936c3477146104d2578063948d8ce6146104da57806395d89b41146104ed57806398836f08146104f55761027f565b80636d06dfa01461044a57806370a082311461045d5780637c5e9ea4146104705780638025e303146104915780638201aa3f146104995761027f565b8063313ce567116101f55780634f69c0d4116101b95780634f69c0d4146103cb578063534d4f3d146103de5780635d5e8ce7146103f15780635db342771461040457806364c7d6611461041757806366188463146104375761027f565b8063313ce5671461037557806334e199071461038a57806346ab38f11461039d57806346ecfbd6146103b05780634aa4e0b5146103b85761027f565b806318160ddd1161024757806318160ddd1461030a57806319f0f8491461031257806323b872dd146103275780632f37b6241461033a5780633018205f1461034d5780633043ffc9146103625761027f565b806302c9674814610284578063039209af146102ad57806306fdde03146102c2578063095ea7b3146102d757806315e84af9146102f7575b600080fd5b610297610292366004615348565b6105c3565b6040516102a49190615e7c565b60405180910390f35b6102b561079e565b6040516102a491906156b0565b6102ca610905565b6040516102a49190615708565b6102ea6102e53660046152cf565b61099b565b6040516102a491906156fd565b61029761030536600461517d565b6109f4565b610297610a7b565b610325610320366004615260565b610a81565b005b6102ea6103353660046151b1565b610b7c565b6102ea610348366004615162565b610cad565b610355610ccf565b6040516102a49190615613565b6103256103703660046151f1565b610ce3565b61037d6110a1565b6040516102a49190615e93565b610325610398366004615556565b6110a6565b6102976103ab366004615348565b611162565b6102976112da565b6102976103c6366004615162565b6112e0565b6103256103d9366004615586565b6113ed565b6103256103ec366004615556565b611619565b6103256103ff366004615437565b61167d565b610297610412366004615348565b61175a565b61042a610425366004615162565b611938565b6040516102a49190615e11565b6102ea6104453660046152cf565b611a0f565b610297610458366004615348565b611ad8565b61029761046b366004615162565b611cab565b61048361047e3660046152f9565b611cc6565b6040516102a4929190615e85565b610297611fbd565b6104836104a73660046152f9565b611fc2565b6103256104ba366004615162565b612295565b6102976104cd366004615162565b612554565b61029761266d565b6102976104e8366004615162565b61269a565b6102ca612724565b6104fd612785565b6040516102a492919061564b565b61032561051936600461537b565b612889565b61032561052c3660046152cf565b612cdc565b6102ea61053f3660046152cf565b612dc4565b610325610552366004615586565b612dda565b6103256105653660046154a0565b6130a4565b6102b561343f565b6102976134c4565b6102976134ca565b6102ea6105903660046152cf565b6134f7565b6102976105a336600461517d565b61356b565b6102976105b6366004615162565b613596565b6102ea6135ff565b60055460009060ff16156105f25760405162461bcd60e51b81526004016105e990615a2c565b60405180910390fd5b6005805460ff19166001179055610607614ffa565b6106108561360f565b90506106358160c001516003670de0b6b3a76400008161062c57fe5b046001016136e4565b8411156106545760405162461bcd60e51b81526004016105e990615a88565b600061067b8260c0015183606001516001600160601b0316600254600a548960075461375d565b90508061069a5760405162461bcd60e51b81526004016105e990615832565b838111156106ba5760405162461bcd60e51b81526004016105e9906159d6565b6106c5863387613821565b6106d38260c0015186613910565b6001600160a01b0387166000908152600960205260409020600101556106f98287613949565b60006107068260006136e4565b9050866001600160a01b0316336001600160a01b03167fe74c91552b64c2e2e7bd255639e004e693bd3e1d01cc33e65610b86afcc1ffed8860405161074b9190615e7c565b60405180910390a361075d3383613adc565b61076f61076a8383613910565b613ae6565b60055461078a9061010090046001600160a01b031682613af2565b506005805460ff1916905595945050505050565b60055460609060ff16156107c45760405162461bcd60e51b81526004016105e990615a2c565b6060600880548060200260200160405190810160405280929190818152602001828054801561081c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107fe575b50505050509050805167ffffffffffffffff8111801561083b57600080fd5b50604051908082528060200260200182016040528015610865578160200160208202803683370190505b5091506000805b83518110156108fe57600083828151811061088357fe5b6020908102919091018101516001600160a01b03811660009081526009909252604090912054909150600160981b90046001600160601b0316156108f557808584806001019550815181106108d457fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b5060010161086c565b5082525090565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109915780601f1061096657610100808354040283529160200191610991565b820191906000526020600020905b81548152906001019060200180831161097457829003601f168201915b5050505050905090565b3360008181526001602090815260408083206001600160a01b03871680855292528083208590555191929091600080516020615f34833981519152906109e2908690615e7c565b60405180910390a35060015b92915050565b60055460009060ff1615610a1a5760405162461bcd60e51b81526004016105e990615a2c565b610a22614ffa565b610a2b84613afc565b509050610a36614ffa565b610a3f8461360f565b9050610a728260c0015183606001516001600160601b03168360c0015184606001516001600160601b0316600754613c4a565b95945050505050565b60025490565b60055461010090046001600160a01b031615610aaf5760405162461bcd60e51b81526004016105e990615c42565b6001600160a01b038516610ad55760405162461bcd60e51b81526004016105e990615d3d565b60058054610100600160a81b0319166101006001600160a01b038816021790556028670de0b6b3a764000004600755604080516020601f8601819004810282018101909252848152610b7591869086908190840183828082843760009201919091525050604080516020601f88018190048102820181019092528681529250869150859081908401838280828437600092019190915250613caf92505050565b5050505050565b6000336001600160a01b0385161480610bb857506001600160a01b03841660009081526001602090815260408083203384529091529020548211155b610bd45760405162461bcd60e51b81526004016105e9906159a7565b610bdf848484613d26565b336001600160a01b03851614801590610c1d57506001600160a01b038416600090815260016020908152604080832033845290915290205460001914155b15610ca3576001600160a01b0384166000908152600160209081526040808320338452909152902054610c509083613910565b6001600160a01b038581166000908152600160209081526040808320338085529252918290208490559051918616929091600080516020615f3483398151915291610c9a91615e7c565b60405180910390a35b5060019392505050565b6001600160a01b03811660009081526009602052604090205460ff165b919050565b60055461010090046001600160a01b031690565b60055460ff1615610d065760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff191660011790556001600160a01b0384166000908152600960205260409020805460ff16610d4c5760405162461bcd60e51b81526004016105e990615ab3565b6040516370a0823160e01b81526000906001600160a01b038716906370a0823190610d7b903090600401615613565b60206040518083038186803b158015610d9357600080fd5b505afa158015610da7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcb919061556e565b905084811015610ded5760405162461bcd60e51b81526004016105e990615926565b610df8868887613821565b6000610e06826007546136e4565b90506000610e148783613e0f565b604051630ed1000360e31b81529091506001600160a01b038a1690637688001890610e4b908b908b9086908c908c90600401615664565b600060405180830381600087803b158015610e6557600080fd5b505af1158015610e79573d6000803e3d6000fd5b50506040516370a0823160e01b8152600092506001600160a01b038b1691506370a0823190610eac903090600401615613565b60206040518083038186803b158015610ec457600080fd5b505afa158015610ed8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efc919061556e565b90508381118015610f0d5750818110155b610f295760405162461bcd60e51b81526004016105e990615a51565b600185018190558454610100900460ff1661108b576001600160a01b0389166000908152600b6020526040902054808210611089576001600160a01b038a166000818152600b6020526040808220829055885461ff001916610100178955517ff7bb8e57ffdfd9a31e7580ee84f68757f44fb4a8a913f44520d22f2da1c955e59190a26000610fb88383613910565b90506000610fc68284613e3b565b90506000610ff16004670de0b6b3a76400005b04610fec6703782dace9d90000856136e4565b613e0f565b8954600160381b600160981b031916600160381b6001600160601b0383169081029190911766ffffffffff00001916620100004264ffffffffff1602178b55600a549192506110409190613e0f565b600a5588546040516001600160a01b038f1691600080516020615f148339815191529161107d91600160381b90046001600160601b031690615ea1565b60405180910390a25050505b505b50506005805460ff191690555050505050505050565b601290565b60055461010090046001600160a01b031633146110d55760405162461bcd60e51b81526004016105e99061573b565b64e8d4a510008110156110fa5760405162461bcd60e51b81526004016105e99061585b565b67016345785d8a00008111156111225760405162461bcd60e51b81526004016105e990615ada565b60078190556040517fccfe595973efc7c1f6c29e31974d380470b9431d7770290185b7129419c7e63e90611157908390615e7c565b60405180910390a150565b60055460009060ff16156111885760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff1916600117905561119d614ffa565b6111a68561360f565b905060006111cf8260c0015183606001516001600160601b0316600254600a5489600754613ecf565b9050838110156111f15760405162461bcd60e51b81526004016105e9906158d6565b61120b8260c001516003670de0b6b3a76400008161062c57fe5b81111561122a5760405162461bcd60e51b81526004016105e990615a88565b611235863383613821565b6112438260c0015182613910565b6001600160a01b0387166000908152600960205260409020600101556112698287613949565b60006112768660006136e4565b9050866001600160a01b0316336001600160a01b03167fe74c91552b64c2e2e7bd255639e004e693bd3e1d01cc33e65610b86afcc1ffed846040516112bb9190615e7c565b60405180910390a36112cd3387613adc565b61076f61076a8783613910565b600c5490565b60055460009060ff16156113065760405162461bcd60e51b81526004016105e990615a2c565b61130e614ffa565b506001600160a01b038216600090815260096020908152604091829020825160e081018452815460ff80821615158084526101008304821615159584019590955264ffffffffff62010000830416958301959095526001600160601b03600160381b820481166060840152600160981b8204166080830152600160f81b900490931660a08401526001015460c08301526113ba5760405162461bcd60e51b81526004016105e990615ab3565b80602001516113e35750506001600160a01b0381166000908152600b6020526040902054610cca565b60c0015192915050565b60055460ff16156114105760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff19166001179055600654600160a01b900460ff166114465760405162461bcd60e51b81526004016105e990615b2a565b6000611450610a7b565b9050600061145e8583613e3b565b90508061147d5760405162461bcd60e51b81526004016105e990615832565b600854831461149e5760405162461bcd60e51b81526004016105e990615bd1565b600c5480156114d057806114b28488613e0f565b11156114d05760405162461bcd60e51b81526004016105e990615d67565b60005b848110156115f3576000600882815481106114ea57fe5b6000918252602090912001546001600160a01b03169050611509614ffa565b600061151483613afc565b915091506000611528878460c001516136e4565b9050806115475760405162461bcd60e51b81526004016105e990615832565b89898681811061155357fe5b905060200201358111156115795760405162461bcd60e51b81526004016105e9906159d6565b61158d84846115888585613e0f565b613f98565b836001600160a01b0316336001600160a01b03167f63982df10efd8dfaaaa0fcc7f50b2d93b7cba26ccc48adee2873220d485dc39a836040516115d09190615e7c565b60405180910390a36115e3843383614178565b5050600190920191506114d39050565b506115fd866141a3565b6116073387613af2565b50506005805460ff1916905550505050565b60055461010090046001600160a01b031633146116485760405162461bcd60e51b81526004016105e99061573b565b600c8190556040517f65492266ae9a1f46497efddd24b6946862569680a511c543590d4587ca800d0590611157908390615e7c565b60055460ff16156116a05760405162461bcd60e51b81526004016105e990615a2c565b60058054600160ff19909116179081905561010090046001600160a01b031633146116dd5760405162461bcd60e51b81526004016105e99061573b565b828181146116fd5760405162461bcd60e51b81526004016105e990615bd1565b60005b818110156116075761175286868381811061171757fe5b905060200201602081019061172c9190615162565b85858481811061173857fe5b905060200201602081019061174d91906155d0565b6141ac565b600101611700565b60055460009060ff16156117805760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff19166001179055600654600160a01b900460ff166117b65760405162461bcd60e51b81526004016105e990615b2a565b6117be614ffa565b60006117c986613afc565b9150915084600014156117ee5760405162461bcd60e51b81526004016105e990615dec565b61180e8260c001516002670de0b6b3a76400008161180857fe5b046136e4565b85111561182d5760405162461bcd60e51b81526004016105e9906157dd565b60006118548360c0015184606001516001600160601b0316600254600a548a6007546142c9565b600c54909150801561188b578061186d60025484613e0f565b111561188b5760405162461bcd60e51b81526004016105e990615d67565b858210156118ab5760405162461bcd60e51b81526004016105e9906158d6565b6118ba8885611588868b613e0f565b876001600160a01b0316336001600160a01b03167f63982df10efd8dfaaaa0fcc7f50b2d93b7cba26ccc48adee2873220d485dc39a896040516118fd9190615e7c565b60405180910390a361190e826141a3565b6119183383613af2565b611923883389614178565b506005805460ff191690559695505050505050565b611940614ffa565b60055460ff16156119635760405162461bcd60e51b81526004016105e990615a2c565b506001600160a01b038116600090815260096020908152604091829020825160e081018452815460ff80821615158084526101008304821615159584019590955264ffffffffff62010000830416958301959095526001600160601b03600160381b820481166060840152600160981b8204166080830152600160f81b900490931660a08401526001015460c0830152610cca5760405162461bcd60e51b81526004016105e990615ab3565b3360009081526001602090815260408083206001600160a01b038616845290915281205480831115611a64573360009081526001602090815260408083206001600160a01b0388168452909152812055611a93565b611a6e8184613910565b3360009081526001602090815260408083206001600160a01b03891684529091529020555b3360008181526001602090815260408083206001600160a01b038916808552925291829020549151909291600080516020615f3483398151915291610c9a9190615e7c565b60055460009060ff1615611afe5760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff19166001179055600654600160a01b900460ff16611b345760405162461bcd60e51b81526004016105e990615b2a565b600c548015611b685780611b4a60025486613e0f565b1115611b685760405162461bcd60e51b81526004016105e990615d67565b611b70614ffa565b6000611b7b87613afc565b915091506000611ba68360c0015184606001516001600160601b0316600254600a548b600754614365565b905080611bc55760405162461bcd60e51b81526004016105e990615832565b85811115611be55760405162461bcd60e51b81526004016105e9906159d6565b611bff8360c001516002670de0b6b3a76400008161180857fe5b811115611c1e5760405162461bcd60e51b81526004016105e9906157dd565b611c2d88846115888585613e0f565b876001600160a01b0316336001600160a01b03167f63982df10efd8dfaaaa0fcc7f50b2d93b7cba26ccc48adee2873220d485dc39a83604051611c709190615e7c565b60405180910390a3611c81876141a3565b611c8b3388613af2565b611c96883383614178565b6005805460ff19169055979650505050505050565b6001600160a01b031660009081526020819052604090205490565b600554600090819060ff1615611cee5760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff19166001179055600654600160a01b900460ff16611d245760405162461bcd60e51b81526004016105e990615b2a565b611d2c614ffa565b6000611d3789613afc565b91509150611d43614ffa565b611d4c8861360f565b9050611d688160c001516003670de0b6b3a76400008161062c57fe5b871115611d875760405162461bcd60e51b81526004016105e990615a88565b6000611dba8460c0015185606001516001600160601b03168460c0015185606001516001600160601b0316600754613c4a565b905086811115611ddc5760405162461bcd60e51b81526004016105e990615b52565b6000611e108560c0015186606001516001600160601b03168560c0015186606001516001600160601b03168d6007546143ff565b90508a811115611e325760405162461bcd60e51b81526004016105e9906159d6565b611e3d8c3383614178565b611e488a338b613821565b611e528482613e0f565b9350611e5f8c8686613f98565b846020015115611e715760c085018490525b611e7f8360c001518a613910565b60c084018190526001600160a01b038b16600090815260096020526040902060010155611eac838b613949565b6000611edf8660c0015187606001516001600160601b03168660c0015187606001516001600160601b0316600754613c4a565b905082811015611f015760405162461bcd60e51b81526004016105e990615832565b88811115611f215760405162461bcd60e51b81526004016105e990615c19565b611f2b828b613e3b565b831115611f4a5760405162461bcd60e51b81526004016105e990615832565b8a6001600160a01b03168d6001600160a01b0316336001600160a01b03167f908fb5ee8f16c6bc9bc3690973819f32a4d4b10188134543c88706e0e1d43378858e604051611f99929190615e85565b60405180910390a46005805460ff19169055909c909b509950505050505050505050565b600081565b600554600090819060ff1615611fea5760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff19166001179055600654600160a01b900460ff166120205760405162461bcd60e51b81526004016105e990615b2a565b612028614ffa565b600061203389613afc565b9150915061203f614ffa565b6120488861360f565b90506120648360c001516002670de0b6b3a76400008161180857fe5b8911156120835760405162461bcd60e51b81526004016105e9906157dd565b60006120b68460c0015185606001516001600160601b03168460c0015185606001516001600160601b0316600754613c4a565b9050868111156120d85760405162461bcd60e51b81526004016105e990615b52565b600061210c8560c0015186606001516001600160601b03168560c0015186606001516001600160601b03168f600754614482565b90508881101561212e5760405162461bcd60e51b81526004016105e9906158d6565b6121398c338d614178565b6121448a3383613821565b61214e848c613e0f565b935061215b8c8686613f98565b84602001511561216d5760c085018490525b61217b8360c0015182613910565b60c084018190526001600160a01b038b166000908152600960205260409020600101556121a8838b613949565b60006121db8660c0015187606001516001600160601b03168660c0015187606001516001600160601b0316600754613c4a565b9050828110156121fd5760405162461bcd60e51b81526004016105e990615807565b8881111561221d5760405162461bcd60e51b81526004016105e990615c19565b6122278c83613e3b565b8311156122465760405162461bcd60e51b81526004016105e990615832565b8a6001600160a01b03168d6001600160a01b0316336001600160a01b03167f908fb5ee8f16c6bc9bc3690973819f32a4d4b10188134543c88706e0e1d433788f86604051611f99929190615e85565b60055460ff16156122b85760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff191660011790556001600160a01b03811660008181526009602052604080822090516370a0823160e01b81529092906370a0823190612301903090600401615613565b60206040518083038186803b15801561231957600080fd5b505afa15801561232d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612351919061556e565b825490915060ff16156124c8578154610100900460ff166124a5576001600160a01b0383166000908152600b60205260409020548082106124a3576001600160a01b0384166000818152600b6020526040808220829055855461ff001916610100178655517ff7bb8e57ffdfd9a31e7580ee84f68757f44fb4a8a913f44520d22f2da1c955e59190a260006123e68383613910565b905060006123f48284613e3b565b9050600061240b6004670de0b6b3a7640000610fd9565b8654600160381b600160981b031916600160381b6001600160601b0383169081029190911766ffffffffff00001916620100004264ffffffffff1602178855600a5491925061245a9190613e0f565b600a5585546040516001600160a01b03891691600080516020615f148339815191529161249791600160381b90046001600160601b031690615ea1565b60405180910390a25050505b505b6001600160a01b0383166000908152600960205260409020600101819055612545565b6006546124e09084906001600160a01b031683613821565b6006546040516360b8257960e11b81526001600160a01b039091169063c1704af290612512908690859060040161564b565b600060405180830381600087803b15801561252c57600080fd5b505af1158015612540573d6000803e3d6000fd5b505050505b50506005805460ff1916905550565b60055460009060ff161561257a5760405162461bcd60e51b81526004016105e990615a2c565b612582614ffa565b506001600160a01b038216600090815260096020908152604091829020825160e081018452815460ff80821615158084526101008304821615159584019590955264ffffffffff62010000830416958301959095526001600160601b03600160381b820481166060840152600160981b8204166080830152600160f81b900490931660a08401526001015460c083015261262e5760405162461bcd60e51b81526004016105e990615ab3565b8060200151156126505760405162461bcd60e51b81526004016105e990615bf6565b50506001600160a01b03166000908152600b602052604090205490565b60055460009060ff16156126935760405162461bcd60e51b81526004016105e990615a2c565b50600a5490565b60055460009060ff16156126c05760405162461bcd60e51b81526004016105e990615a2c565b6001600160a01b03821660009081526009602052604090205460ff166126f85760405162461bcd60e51b81526004016105e990615ab3565b506001600160a01b0316600090815260096020526040902054600160381b90046001600160601b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109915780601f1061096657610100808354040283529160200191610991565b600554600090819060ff16156127ad5760405162461bcd60e51b81526004016105e990615a2c565b6008546000908190815b8181101561285e57600881815481106127cc57fe5b60009182526020808320909101546001600160a01b03168083526009909152604090912080549195509060ff61010090910416801561281b57508054600160981b90046001600160601b031615155b15612855576001810154600a54825461284d929161284891600160381b90046001600160601b0316613e3b565b6136e4565b93505061285e565b506001016127b7565b506000821161287f5760405162461bcd60e51b81526004016105e990615767565b5090925090509091565b60055461010090046001600160a01b031633146128b85760405162461bcd60e51b81526004016105e99061573b565b600854156128d85760405162461bcd60e51b81526004016105e990615954565b8660028110156128fa5760405162461bcd60e51b81526004016105e990615d94565b600a81111561291b5760405162461bcd60e51b81526004016105e9906157b5565b858114801561292957508381145b6129455760405162461bcd60e51b81526004016105e990615bd1565b6000805b82811015612c215760008b8b8381811061295f57fe5b90506020020160208101906129749190615162565b9050600088888481811061298457fe5b905060200201602081019061299991906155d0565b905060008b8b858181106129a957fe5b9050602002013590506004670de0b6b3a7640000816129c457fe5b04826001600160601b031610156129ed5760405162461bcd60e51b81526004016105e990615b7f565b68015af1d78b58c400006001600160601b0383161115612a1f5760405162461bcd60e51b81526004016105e990615880565b620f4240811015612a425760405162461bcd60e51b81526004016105e9906158fd565b6040518060e001604052806001151581526020016001151581526020014264ffffffffff168152602001836001600160601b03168152602001836001600160601b031681526020018560ff1681526020018281525060096000856001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548164ffffffffff021916908364ffffffffff16021790555060608201518160000160076101000a8154816001600160601b0302191690836001600160601b0316021790555060808201518160000160136101000a8154816001600160601b0302191690836001600160601b0316021790555060a082015181600001601f6101000a81548160ff021916908360ff16021790555060c082015181600101559050506008839080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b03160217905550612c0985836001600160601b0316613e0f565b9450612c16838983614178565b505050600101612949565b50680168d28e3f00280000811115612c4b5760405162461bcd60e51b81526004016105e9906158a8565b600a8190556006805460ff60a01b1916600160a01b1790556040517f183bed17d33ee5be9a47bb997aee6a152d84a34309cdb66f76301de0a40a138990600090a1612c9e68056bc75e2d631000006141a3565b612cb18468056bc75e2d63100000613af2565b5050600680546001600160a01b0319166001600160a01b039290921691909117905550505050505050565b60055461010090046001600160a01b03163314612d0b5760405162461bcd60e51b81526004016105e99061573b565b6001600160a01b0382166000908152600960205260409020805460ff16612d445760405162461bcd60e51b81526004016105e990615ab3565b8054610100900460ff1615612d6b5760405162461bcd60e51b81526004016105e990615bf6565b6001600160a01b0383166000908152600b602052604090819020839055517e0c7a55677231b335e6dea005fa240ac2aeafbd62f188372a7d66892b722c5290612db7908590859061564b565b60405180910390a1505050565b6000612dd1338484613d26565b50600192915050565b60055460ff1615612dfd5760405162461bcd60e51b81526004016105e990615a2c565b6005805460ff191660011790556008548114612e2b5760405162461bcd60e51b81526004016105e990615bd1565b6000612e35610a7b565b90506000612e448560006136e4565b90506000612e528683613910565b90506000612e608285613e3b565b905080612e7f5760405162461bcd60e51b81526004016105e990615832565b612e893388613adc565b600554612ea49061010090046001600160a01b031684613af2565b612ead82613ae6565b60005b8581101561309057600060088281548110612ec757fe5b6000918252602090912001546001600160a01b03169050612ee6614ffa565b506001600160a01b038116600090815260096020908152604091829020825160e081018452815460ff80821615158352610100820481161580159584019590955264ffffffffff62010000830416958301959095526001600160601b03600160381b820481166060840152600160981b8204166080830152600160f81b900490931660a08401526001015460c0830152613054576000612f8a858360c001516136e4565b905080612fa95760405162461bcd60e51b81526004016105e990615832565b898985818110612fb557fe5b90506020020135811015612fdb5760405162461bcd60e51b81526004016105e9906158d6565b612fe98260c0015182613910565b6001600160a01b0384166000818152600960205260409081902060010192909255905133907fe74c91552b64c2e2e7bd255639e004e693bd3e1d01cc33e65610b86afcc1ffed9061303b908590615e7c565b60405180910390a361304e833383613821565b50613086565b88888481811061306057fe5b905060200201356000146130865760405162461bcd60e51b81526004016105e990615aff565b5050600101612eb0565b50506005805460ff19169055505050505050565b60055460ff16156130c75760405162461bcd60e51b81526004016105e990615a2c565b60058054600160ff19909116179081905561010090046001600160a01b031633146131045760405162461bcd60e51b81526004016105e99061573b565b84838114801561311357508181145b61312f5760405162461bcd60e51b81526004016105e990615bd1565b60085460608167ffffffffffffffff8111801561314b57600080fd5b50604051908082528060200260200182016040528015613175578160200160208202803683370190505b50905060608367ffffffffffffffff8111801561319157600080fd5b506040519080825280602002602001820160405280156131cb57816020015b6131b8614ffa565b8152602001906001900390816131b05790505b50905060005b8481101561330657600960008c8c848181106131e957fe5b90506020020160208101906131fe9190615162565b6001600160a01b031681526020808201929092526040908101600020815160e081018352815460ff808216151583526101008204811615159583019590955264ffffffffff62010000820416938201939093526001600160601b03600160381b840481166060830152600160981b8404166080820152600160f81b90920490921660a082015260019091015460c0820152825183908390811061329d57fe5b60200260200101819052508181815181106132b457fe5b602002602001015160000151156132fe576001838383815181106132d457fe5b602002602001015160a0015160ff16815181106132ed57fe5b911515602092830291909101909101525b6001016131d1565b5060005b8381101561335c5782818151811061331e57fe5b6020026020010151613354576133546008828154811061333a57fe5b60009182526020822001546001600160a01b0316906141ac565b60010161330a565b5060005b848110156134285760008b8b8381811061337657fe5b905060200201602081019061338b9190615162565b905060008a8a8481811061339b57fe5b90506020020160208101906133b091906155d0565b90506703782dace9d900006001600160601b03821610156133d657506703782dace9d900005b8383815181106133e257fe5b6020026020010151600001516134145761340f828a8a8681811061340257fe5b9050602002013583614503565b61341e565b61341e82826141ac565b5050600101613360565b50506005805460ff19169055505050505050505050565b60055460609060ff16156134655760405162461bcd60e51b81526004016105e990615a2c565b600880548060200260200160405190810160405280929190818152602001828054801561099157602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161349d575050505050905090565b60085490565b60055460009060ff16156134f05760405162461bcd60e51b81526004016105e990615a2c565b5060075490565b3360009081526001602090815260408083206001600160a01b03861684529091528120546135259083613e0f565b3360008181526001602090815260408083206001600160a01b03891680855292529182902084905590519092600080516020615f34833981519152916109e29190615e7c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60055460009060ff16156135bc5760405162461bcd60e51b81526004016105e990615a2c565b6001600160a01b0382166000908152600960205260409020805460ff166135f55760405162461bcd60e51b81526004016105e990615ab3565b6001015492915050565b600654600160a01b900460ff1690565b613617614ffa565b506001600160a01b038116600090815260096020908152604091829020825160e081018452815460ff80821615158084526101008304821615159584019590955264ffffffffff62010000830416958301959095526001600160601b03600160381b820481166060840152600160981b8204166080830152600160f81b900490931660a08401526001015460c08301526136c35760405162461bcd60e51b81526004016105e990615ab3565b8060200151610cca5760405162461bcd60e51b81526004016105e990615aff565b60008282028315806136fe5750828482816136fb57fe5b04145b61371a5760405162461bcd60e51b81526004016105e990615ba7565b6706f05b59d3b200008101818110156137455760405162461bcd60e51b81526004016105e990615ba7565b6000670de0b6b3a7640000825b049695505050505050565b60008061376a8786613e3b565b90506000613780670de0b6b3a764000083613910565b9050600061378e82866136e4565b905060006137ad876137a8670de0b6b3a764000085613910565b613e3b565b905060006137bb8c83613910565b905060006137c9828e613e3b565b905060006137d782886147e3565b905060006137e5828e6136e4565b905060006137f38e83613910565b905061380c816137a8670de0b6b3a76400006000613910565b99505050505050505050509695505050505050565b60006060846001600160a01b031663a9059cbb60e01b858560405160240161384a92919061564b565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161388891906155f7565b6000604051808303816000865af19150503d80600081146138c5576040519150601f19603f3d011682016040523d82523d6000602084013e6138ca565b606091505b50915091508180156138f45750805115806138f45750808060200190518101906138f49190615536565b610b755760405162461bcd60e51b81526004016105e990615cbf565b600080600061391f8585614896565b9150915080156139415760405162461bcd60e51b81526004016105e990615ce8565b509392505050565b81608001516001600160601b031682606001516001600160601b031611158061397457508160200151155b8061398d5750610e10826040015164ffffffffff164203105b1561399757613ad8565b6060820151608083015160006139c06001600160601b0384166064670de0b6b3a7640000611808565b905060006139e0846001600160601b0316846001600160601b0316613910565b905081811115613a03576139fd846001600160601b031683613910565b92508190505b6703782dace9d900006001600160601b03841611613a3d57600a5460009350613a2c9084613910565b600a55613a38856148bb565b613ad3565b613a49600a5482613910565b600a556001600160601b038316606087018190526001600160a01b038616600081815260096020526040908190208054600160381b600160981b031916600160381b9094029390931766ffffffffff00001916620100004264ffffffffff1602179092559051600080516020615f1483398151915290613aca908690615ea1565b60405180910390a25b505050505b5050565b613ad88282614bfd565b613aef81614c08565b50565b613ad88282614cb1565b613b04614ffa565b506001600160a01b0381166000908152600960209081526040808320815160e081018352815460ff80821615158084526101008304821615159684019690965264ffffffffff62010000830416948301949094526001600160601b03600160381b820481166060840152600160981b8204166080830152600160f81b900490921660a08301526001015460c08201529190613bb15760405162461bcd60e51b81526004016105e990615ab3565b5060c08101516020820151613c45576001600160a01b0383166000908152600b602052604081205460c08401819052613bf890613bee9084613910565b8460c00151613e3b565b90506000613c1c600a6004670de0b6b3a76400005b0481613c1557fe5b04836136e4565b9050613c346004670de0b6b3a76400005b0482613e0f565b6001600160601b0316606085015250505b915091565b600080613c578787613e3b565b90506000613c658686613e3b565b90506000613c738383613e3b565b90506000613c95670de0b6b3a76400006137a8670de0b6b3a764000089613910565b9050613ca182826136e4565b9a9950505050505050505050565b60035460026000196101006001841615020190911604158015613cd25750815115155b8015613cde5750805115155b613cfa5760405162461bcd60e51b81526004016105e9906159fc565b8151613d0d906003906020850190615036565b508051613d21906004906020840190615036565b505050565b6001600160a01b038316600090815260208190526040902054811115613d5e5760405162461bcd60e51b81526004016105e990615926565b6001600160a01b038316600090815260208190526040902054613d819082613910565b6001600160a01b038085166000908152602081905260408082209390935590841681522054613db09082613e0f565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90613e02908590615e7c565b60405180910390a3505050565b600082820183811015613e345760405162461bcd60e51b81526004016105e990615d13565b9392505050565b600081613e5a5760405162461bcd60e51b81526004016105e990615c6a565b670de0b6b3a76400008302831580613e825750670de0b6b3a7640000848281613e7f57fe5b04145b613e9e5760405162461bcd60e51b81526004016105e99061597d565b60028304810181811015613ec45760405162461bcd60e51b81526004016105e99061597d565b600084828161375257fe5b600080613edc8786613e3b565b90506000613ef785612848670de0b6b3a76400006000613910565b90506000613f058883613910565b90506000613f13828a613e3b565b90506000613f3282613f2d670de0b6b3a764000088613e3b565b6147e3565b90506000613f40828e6136e4565b90506000613f4e8e83613910565b90506000613f6d613f67670de0b6b3a76400008a613910565b8b6136e4565b9050613f8582612848670de0b6b3a764000084613910565b9f9e505050505050505050505050505050565b816020015161414b578160c0015181106140f4576001600160a01b0383166000818152600b6020908152604080832083905560098252808320805461ff001916610100179055600191860191909152517ff7bb8e57ffdfd9a31e7580ee84f68757f44fb4a8a913f44520d22f2da1c955e59190a2600061401c828460c00151613910565b9050600061402e828560c00151613e3b565b90506140466703782dace9d90000610fec81846136e4565b6001600160601b03908116606086018181526001600160a01b03881660009081526009602052604090208054600160381b600160981b031916600160381b9093029290921766ffffffffff00001916620100004264ffffffffff160217909155600a5490516140b59216613e0f565b600a5560608401516040516001600160a01b03871691600080516020615f14833981519152916140e59190615ea1565b60405180910390a25050614146565b6000614107613bee8460c0015184613910565b90506000614120600a6004670de0b6b3a7640000613c0d565b90506141356004670de0b6b3a7640000613c2d565b6001600160601b0316606085015250505b614155565b6141558284614cbc565b6001600160a01b0390921660009081526009602052604090206001019190915550565b60006060846001600160a01b03166323b872dd60e01b85308660405160240161384a93929190615627565b613aef81614e2d565b6001600160a01b0382166000908152600960205260409020805460ff166141e55760405162461bcd60e51b81526004016105e990615ab3565b6703782dace9d900006001600160601b03831610158061420c57506001600160601b038216155b6142285760405162461bcd60e51b81526004016105e990615b7f565b68015af1d78b58c400006001600160601b038316111561425a5760405162461bcd60e51b81526004016105e990615880565b80546bffffffffffffffffffffffff60981b1916600160981b6001600160601b038416021781556040516001600160a01b038416907fc7ea88f3376e27ce6ebc2025310023327f743a8377d438258c36b166dd8b2983906142bc908590615ea1565b60405180910390a2505050565b6000806142d68786613e3b565b905060006142f56142ef670de0b6b3a764000084613910565b856136e4565b9050600061430f86612848670de0b6b3a764000085613910565b9050600061431d8b83613e0f565b9050600061432b828d613e3b565b9050600061433982876147e3565b90506000614347828d6136e4565b9050614353818d613910565b9e9d5050505050505050505050505050565b6000806143728786613e3b565b905060006143808786613e0f565b9050600061438e8289613e3b565b905060006143a4670de0b6b3a764000085613e3b565b905060006143b283836147e3565b905060006143c0828e6136e4565b905060006143ce828f613910565b905060006143e7613f67670de0b6b3a76400008a613910565b9050613f85826137a8670de0b6b3a764000084613910565b60008061440c8588613e3b565b9050600061441a8786613910565b905060006144288883613e3b565b9050600061443682856147e3565b905061444a81670de0b6b3a7640000613910565b905061445e670de0b6b3a764000087613910565b945061447361446d8c836136e4565b86613e3b565b9b9a5050505050505050505050565b60008061448f8786613e3b565b905060006144a5670de0b6b3a764000085613910565b90506144b185826136e4565b905060006144c38a6137a88c85613e0f565b905060006144d182856147e3565b905060006144e7670de0b6b3a764000083613910565b90506144f38a826136e4565b9c9b505050505050505050505050565b6001600160a01b03831660009081526009602052604090205460ff161561453c5760405162461bcd60e51b81526004016105e99061578f565b6703782dace9d900006001600160601b038216101561456d5760405162461bcd60e51b81526004016105e990615b7f565b68015af1d78b58c400006001600160601b038216111561459f5760405162461bcd60e51b81526004016105e990615880565b620f42408210156145c25760405162461bcd60e51b81526004016105e9906158fd565b6040518060e00160405280600115158152602001600015158152602001600064ffffffffff16815260200160006001600160601b03168152602001826001600160601b0316815260200160088054905060ff168152602001600081525060096000856001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548164ffffffffff021916908364ffffffffff16021790555060608201518160000160076101000a8154816001600160601b0302191690836001600160601b0316021790555060808201518160000160136101000a8154816001600160601b0302191690836001600160601b0316021790555060a082015181600001601f6101000a81548160ff021916908360ff16021790555060c082015181600101559050506008839080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600b6000856001600160a01b03166001600160a01b0316815260200190815260200160002081905550826001600160a01b03167fb2daf560899f6307b318aecfb57eb2812c488da4a4c1cad2019b482fa63294ed82846040516142bc929190615eb5565b600060018310156148065760405162461bcd60e51b81526004016105e990615c90565b671bc16d674ec7ffff83111561482e5760405162461bcd60e51b81526004016105e990615dbc565b600061483983614e9c565b905060006148478483613910565b9050600061485d8661485885614eb7565b614ec5565b90508161486e5792506109ee915050565b600061487f87846305f5e100614f1c565b905061488b82826136e4565b979650505050505050565b6000808284106148ac57505080820360006148b4565b505081810360015b9250929050565b6148c3614ffa565b506001600160a01b038116600090815260096020908152604091829020825160e081018452815460ff808216151583526101008204811615159483019490945264ffffffffff62010000820416948201949094526001600160601b03600160381b850481166060830152600160981b8504166080820152600160f81b90930490911660a0830181905260019091015460c0830181905260085490919060001901808214614a21576008818154811061497757fe5b600091825260209091200154600880546001600160a01b03909216918490811061499d57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508160096000600885815481106149dd57fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020805460ff92909216600160f81b026001600160f81b039092169190911790555b6008805480614a2c57fe5b60008281526020808220600019908401810180546001600160a01b03191690559092019092556040805160e081018252838152808301848152818301858152606083018681526080840187815260a0850188815260c086018981526001600160a01b038f81168b52600990995296909820945185549451935192519151985160ff199095169015151761ff001916610100931515939093029290921766ffffffffff000019166201000064ffffffffff9092169190910217600160381b600160981b031916600160381b6001600160601b0392831602176bffffffffffffffffffffffff60981b1916600160981b9190961602949094176001600160f81b0316600160f81b60ff909516949094029390931783555160019290920191909155600654614b5b9187911685613821565b6006546040516360b8257960e11b81526001600160a01b039091169063c1704af290614b8d908890879060040161564b565b600060405180830381600087803b158015614ba757600080fd5b505af1158015614bbb573d6000803e3d6000fd5b505050507f12a8262eb28ee8a8c11e6cf411b3af6ce5bea42abb36e051bf0a65ae602d52ec85604051614bee9190615613565b60405180910390a15050505050565b613ad8823083613d26565b30600090815260208190526040902054811115614c375760405162461bcd60e51b81526004016105e990615926565b30600090815260208190526040902054614c519082613910565b30600090815260208190526040902055600254614c6e9082613910565b60025560405160009030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90614ca6908590615e7c565b60405180910390a350565b613ad8308383613d26565b81608001516001600160601b031682606001516001600160601b0316101580614ce757508160200151155b80614d005750610e10826040015164ffffffffff164203105b15614d0a57613ad8565b606082015160808301516000614d336001600160601b0384166064670de0b6b3a7640000611808565b90506000614d53836001600160601b0316856001600160601b0316613910565b905081811115614d7657614d70846001600160601b031683613e0f565b92508190505b614d82600a5482613e0f565b600a819055680168d28e3f002800001015614daf5760405162461bcd60e51b81526004016105e9906158a8565b6001600160601b038316606087018190526001600160a01b038616600081815260096020526040908190208054600160381b600160981b031916600160381b9094029390931766ffffffffff00001916620100004264ffffffffff1602179092559051600080516020615f1483398151915290613aca908690615ea1565b30600090815260208190526040902054614e479082613e0f565b30600090815260208190526040902055600254614e649082613e0f565b60025560405130906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90614ca6908590615e7c565b6000670de0b6b3a7640000614eb083614eb7565b0292915050565b670de0b6b3a7640000900490565b60008060028306614ede57670de0b6b3a7640000614ee0565b835b90506002830492505b8215613e3457614ef984856136e4565b93506002830615614f1157614f0e81856136e4565b90505b600283049250614ee9565b6000828180614f3387670de0b6b3a7640000614896565b9092509050670de0b6b3a764000080600060015b888410614feb576000670de0b6b3a764000082029050600080614f7b8a614f7685670de0b6b3a7640000613910565b614896565b91509150614f8d87612848848c6136e4565b9650614f998784613e3b565b965086614fa857505050614feb565b8715614fb2579315935b8015614fbc579315935b8415614fd357614fcc8688613910565b9550614fe0565b614fdd8688613e0f565b95505b505050600101614f47565b50909998505050505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061507757805160ff19168380011785556150a4565b828001600101855582156150a4579182015b828111156150a4578251825591602001919060010190615089565b506150b09291506150b4565b5090565b5b808211156150b057600081556001016150b5565b80356001600160a01b03811681146109ee57600080fd5b60008083601f8401126150f1578182fd5b50813567ffffffffffffffff811115615108578182fd5b60208301915083602080830285010111156148b457600080fd5b60008083601f840112615133578182fd5b50813567ffffffffffffffff81111561514a578182fd5b6020830191508360208285010111156148b457600080fd5b600060208284031215615173578081fd5b613e3483836150c9565b6000806040838503121561518f578081fd5b61519984846150c9565b91506151a884602085016150c9565b90509250929050565b6000806000606084860312156151c5578081fd5b83356151d081615efe565b925060208401356151e081615efe565b929592945050506040919091013590565b600080600080600060808688031215615208578081fd5b61521287876150c9565b945061522187602088016150c9565b935060408601359250606086013567ffffffffffffffff811115615243578182fd5b61524f88828901615122565b969995985093965092949392505050565b600080600080600060608688031215615277578081fd5b853561528281615efe565b9450602086013567ffffffffffffffff8082111561529e578283fd5b6152aa89838a01615122565b909650945060408801359150808211156152c2578283fd5b5061524f88828901615122565b600080604083850312156152e1578182fd5b6152eb84846150c9565b946020939093013593505050565b600080600080600060a08688031215615310578081fd5b61531a87876150c9565b94506020860135935061533087604088016150c9565b94979396509394606081013594506080013592915050565b60008060006060848603121561535c578283fd5b61536685856150c9565b95602085013595506040909401359392505050565b60008060008060008060008060a0898b031215615396578283fd5b883567ffffffffffffffff808211156153ad578485fd5b6153b98c838d016150e0565b909a50985060208b01359150808211156153d1578485fd5b6153dd8c838d016150e0565b909850965060408b01359150808211156153f5578485fd5b506154028b828c016150e0565b909550935050606089013561541681615efe565b9150608089013561542681615efe565b809150509295985092959890939650565b6000806000806040858703121561544c578182fd5b843567ffffffffffffffff80821115615463578384fd5b61546f888389016150e0565b90965094506020870135915080821115615487578384fd5b50615494878288016150e0565b95989497509550505050565b600080600080600080606087890312156154b8578384fd5b863567ffffffffffffffff808211156154cf578586fd5b6154db8a838b016150e0565b909850965060208901359150808211156154f3578586fd5b6154ff8a838b016150e0565b90965094506040890135915080821115615517578384fd5b5061552489828a016150e0565b979a9699509497509295939492505050565b600060208284031215615547578081fd5b81518015158114613e34578182fd5b600060208284031215615567578081fd5b5035919050565b60006020828403121561557f578081fd5b5051919050565b60008060006040848603121561559a578081fd5b83359250602084013567ffffffffffffffff8111156155b7578182fd5b6155c3868287016150e0565b9497909650939450505050565b6000602082840312156155e1578081fd5b81356001600160601b0381168114613e34578182fd5b60008251615609818460208701615ece565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b038716825285602083015284604083015260806060830152826080830152828460a084013781830160a090810191909152601f909201601f19160101949350505050565b6020808252825182820181905260009190848201906040850190845b818110156156f15783516001600160a01b0316835292840192918401916001016156cc565b50909695505050505050565b901515815260200190565b6000602082528251806020840152615727816040850160208701615ece565b601f01601f19169190910160400192915050565b60208082526012908201527122a9292fa727aa2fa1a7a72a2927a62622a960711b604082015260600190565b6020808252600e908201526d4552525f4e4f4e455f524541445960901b604082015260600190565b6020808252600c908201526b11549497d254d7d093d5539160a21b604082015260600190565b6020808252600e908201526d4552525f4d41585f544f4b454e5360901b604082015260600190565b60208082526010908201526f4552525f4d41585f494e5f524154494f60801b604082015260600190565b60208082526011908201527022a9292fa6a0aa242fa0a8282927ac2f9960791b604082015260600190565b6020808252600f908201526e08aa4a4be9a82a890be82a0a0a49eb608b1b604082015260600190565b6020808252600b908201526a4552525f4d494e5f46454560a81b604082015260600190565b6020808252600e908201526d11549497d3505617d5d15251d21560921b604082015260600190565b60208082526014908201527311549497d3505617d513d5105317d5d15251d21560621b604082015260600190565b6020808252600d908201526c11549497d31253525517d3d555609a1b604082015260600190565b6020808252600f908201526e4552525f4d494e5f42414c414e434560881b604082015260600190565b60208082526014908201527311549497d25394d551919250d251539517d0905360621b604082015260600190565b6020808252600f908201526e11549497d253925512505312569151608a1b604082015260600190565b60208082526010908201526f11549497d1125597d25395115493905360821b604082015260600190565b60208082526015908201527422a9292fa12a27a5a2a72fa120a22fa1a0a62622a960591b604082015260600190565b6020808252600c908201526b22a9292fa624a6a4aa2fa4a760a11b604082015260600190565b60208082526016908201527511549497d09513d2d15397d25392551250531256915160521b604082015260600190565b6020808252600b908201526a4552525f5245454e54525960a81b604082015260600190565b60208082526018908201527f4552525f494e53554646494349454e545f5041594d454e540000000000000000604082015260600190565b6020808252601190820152704552525f4d41585f4f55545f524154494f60781b604082015260600190565b6020808252600d908201526c11549497d393d517d093d55391609a1b604082015260600190565b6020808252600b908201526a4552525f4d41585f46454560a81b604082015260600190565b6020808252601190820152704552525f4f55545f4e4f545f524541445960781b604082015260600190565b6020808252600e908201526d4552525f4e4f545f5055424c494360901b604082015260600190565b6020808252601390820152724552525f4241445f4c494d49545f505249434560681b604082015260600190565b6020808252600e908201526d11549497d3525397d5d15251d21560921b604082015260600190565b60208082526010908201526f4552525f4d554c5f4f564552464c4f5760801b604082015260600190565b6020808252600b908201526a22a9292fa0a9292fa622a760a91b604082015260600190565b6020808252600990820152684552525f524541445960b81b604082015260600190565b6020808252600f908201526e4552525f4c494d49545f505249434560881b604082015260600190565b6020808252600e908201526d11549497d0d3d3919251d554915160921b604082015260600190565b6020808252600c908201526b4552525f4449565f5a45524f60a01b604082015260600190565b6020808252601590820152744552525f42504f575f424153455f544f4f5f4c4f5760581b604082015260600190565b6020808252600f908201526e4552525f45524332305f46414c534560881b604082015260600190565b6020808252601190820152704552525f5355425f554e444552464c4f5760781b604082015260600190565b60208082526010908201526f4552525f4144445f4f564552464c4f5760801b604082015260600190565b60208082526010908201526f4552525f4e554c4c5f4144445245535360801b604082015260600190565b6020808252601390820152724552525f4d41585f504f4f4c5f544f4b454e5360681b604082015260600190565b6020808252600e908201526d4552525f4d494e5f544f4b454e5360901b604082015260600190565b60208082526016908201527508aa4a4be84a09eaebe8482a68abea89e9ebe90928e960531b604082015260600190565b6020808252600b908201526a22a9292fad22a927afa4a760a91b604082015260600190565b600060e08201905082511515825260208301511515602083015264ffffffffff604084015116604083015260608301516001600160601b038082166060850152806080860151166080850152505060ff60a08401511660a083015260c083015160c083015292915050565b90815260200190565b918252602082015260400190565b60ff91909116815260200190565b6001600160601b0391909116815260200190565b6001600160601b03929092168252602082015260400190565b60005b83811015615ee9578181015183820152602001615ed1565b83811115615ef8576000848401525b50505050565b6001600160a01b0381168114613aef57600080fdfe21b12aed5d425f5675450ffeeae01039085e5323974c3099e1828155d9b51e778c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a2646970667358221220ce0356f90a45ef5320d6098f1fa763f1de09c2ba2a7a7a0646639e8a66d62c5c64736f6c634300060c0033",
  "devdoc": {
    "events": {
      "LOG_DENORM_UPDATED(address,uint256)": {
        "details": "Emitted when a token's weight updates. "
      },
      "LOG_DESIRED_DENORM_SET(address,uint256)": {
        "details": "Emitted when a token's desired weight is set. "
      },
      "LOG_EXIT(address,address,uint256)": {
        "details": "Emitted when pool tokens are burned for underlying. "
      },
      "LOG_JOIN(address,address,uint256)": {
        "details": "Emitted when underlying tokens are deposited for pool tokens. "
      },
      "LOG_MAX_TOKENS_UPDATED(uint256)": {
        "details": "Emitted when the maximum tokens value is updated. "
      },
      "LOG_MINIMUM_BALANCE_UPDATED(address,uint256)": {
        "details": "Emitted when a token's minimum balance is updated. "
      },
      "LOG_PUBLIC_SWAP_ENABLED()": {
        "details": "Emitted when public trades are enabled. "
      },
      "LOG_SWAP(address,address,address,uint256,uint256)": {
        "details": "Emitted when tokens are swapped. "
      },
      "LOG_SWAP_FEE_UPDATED(uint256)": {
        "details": "Emitted when the swap fee is updated. "
      },
      "LOG_TOKEN_ADDED(address,uint256,uint256)": {
        "details": "Emitted when a token is unbound from the pool. "
      },
      "LOG_TOKEN_READY(address)": {
        "details": "Emitted when a token reaches its minimum balance. "
      },
      "LOG_TOKEN_REMOVED(address)": {
        "details": "Emitted when a token is unbound from the pool. "
      }
    },
    "kind": "dev",
    "methods": {
      "configure(address,string,string)": {
        "details": "Sets the controller address and the token name & symbol. Note: This saves on storage costs for multi-step pool deployment.",
        "params": {
          "controller": "Controller of the pool",
          "name": "Name of the pool token",
          "symbol": "Symbol of the pool token"
        }
      },
      "exitPool(uint256,uint256[])": {
        "details": "Burns `poolAmountIn` pool tokens in exchange for the amounts of each underlying token's balance proportional to the ratio of tokens burned to total pool supply. The amount of each token transferred to the caller must be greater than or equal to the associated minimum output amount from the `minAmountsOut` array.",
        "params": {
          "minAmountsOut": "Minimum amount of each token to receive, in the same order as the pool's _tokens list.",
          "poolAmountIn": "Exact amount of pool tokens to burn"
        }
      },
      "exitswapExternAmountOut(address,uint256,uint256)": {
        "details": "Burn up to `maxPoolAmountIn` for exactly `tokenAmountOut` of `tokenOut`. Returns the number of pool tokens burned. The pool implicitly burns the tokens for all underlying tokens and swaps them to the desired output token. A swap fee is charged against the output tokens.",
        "params": {
          "maxPoolAmountIn": "Maximum amount of pool tokens to burn",
          "tokenAmountOut": "Exact amount of `tokenOut` to receive",
          "tokenOut": "Token to receive"
        },
        "returns": {
          "_0": "poolAmountIn - Amount of pool tokens burned"
        }
      },
      "exitswapPoolAmountIn(address,uint256,uint256)": {
        "details": "Burns `poolAmountIn` pool tokens in exchange for at least `minAmountOut` of `tokenOut`. Returns the number of tokens sent to the caller. The pool implicitly burns the tokens for all underlying tokens and swaps them to the desired output token. A swap fee is charged against the output tokens.",
        "params": {
          "minAmountOut": "Minimum amount of `tokenOut` to receive",
          "poolAmountIn": "Exact amount of pool tokens to burn",
          "tokenOut": "Token to receive"
        },
        "returns": {
          "_0": "tokenAmountOut - Amount of `tokenOut` received"
        }
      },
      "extrapolatePoolValueFromToken()": {
        "details": "Finds the first token which is both initialized and has a desired weight above 0, then returns the address of that token and the extrapolated value of the pool in terms of that token. The value is extrapolated by multiplying the token's balance by the reciprocal of its normalized weight.",
        "returns": {
          "_0": "(token, extrapolatedValue)"
        }
      },
      "flashBorrow(address,address,uint256,bytes)": {
        "details": "Execute a flash loan, transferring `amount` of `token` to `recipient`. `amount` must be repaid with `swapFee` interest by the end of the transaction.",
        "params": {
          "amount": "Amount to borrow",
          "data": "Data to send to the recipient in `receiveFlashLoan` call",
          "recipient": "Must implement the IFlashLoanRecipient interface",
          "token": "Token to borrow"
        }
      },
      "getBalance(address)": {
        "details": "Returns the stored balance of a bound token."
      },
      "getController()": {
        "details": "Returns the controller address."
      },
      "getCurrentDesiredTokens()": {
        "details": "Returns the list of tokens which have a desired weight above 0. Tokens with a desired weight of 0 are set to be phased out of the pool."
      },
      "getCurrentTokens()": {
        "details": "Get all bound tokens."
      },
      "getDenormalizedWeight(address)": {
        "details": "Returns the denormalized weight of a bound token."
      },
      "getMinimumBalance(address)": {
        "details": "Get the minimum balance of an uninitialized token. Note: Throws if the token is initialized."
      },
      "getNumTokens()": {
        "details": "Get the number of tokens bound to the pool."
      },
      "getSpotPrice(address,address)": {
        "details": "Returns the spot price for `tokenOut` in terms of `tokenIn`."
      },
      "getTokenRecord(address)": {
        "details": "Returns the record for a token bound to the pool."
      },
      "getTotalDenormalizedWeight()": {
        "details": "Get the total denormalized weight of the pool."
      },
      "getUsedBalance(address)": {
        "details": "Returns the balance of a token which is used in price calculations. If the token is initialized, this is the stored balance; if not, this is the minimum balance."
      },
      "gulp(address)": {
        "details": "Absorb any tokens that have been sent to the pool. If the token is not bound, it will be sent to the unbound token handler."
      },
      "initialize(address[],uint256[],uint96[],address,address)": {
        "details": "Sets up the initial assets for the pool. Note: `tokenProvider` must have approved the pool to transfer the corresponding `balances` of `tokens`.",
        "params": {
          "balances": "Initial balances to transfer",
          "denorms": "Initial denormalized weights for the tokens",
          "tokenProvider": "Address to transfer the balances from",
          "tokens": "Underlying tokens to initialize the pool with"
        }
      },
      "isBound(address)": {
        "details": "Check if a token is bound to the pool."
      },
      "isPublicSwap()": {
        "details": "Check if swapping tokens and joining the pool is allowed."
      },
      "joinPool(uint256,uint256[])": {
        "details": "Mint new pool tokens by providing the proportional amount of each underlying token's balance relative to the proportion of pool tokens minted. For any underlying tokens which are not initialized, the caller must provide the proportional share of the minimum balance for the token rather than the actual balance.",
        "params": {
          "maxAmountsIn": "Maximum amount of each token to pay in the same order as the pool's _tokens list.",
          "poolAmountOut": "Amount of pool tokens to mint"
        }
      },
      "joinswapExternAmountIn(address,uint256,uint256)": {
        "details": "Pay `tokenAmountIn` of `tokenIn` to mint at least `minPoolAmountOut` pool tokens. The pool implicitly swaps `(1- weightTokenIn) * tokenAmountIn` to the other underlying tokens. Thus a swap fee is charged against the input tokens.",
        "params": {
          "minPoolAmountOut": "Minimum amount of pool tokens to mint",
          "tokenAmountIn": "Exact amount of `tokenIn` to pay",
          "tokenIn": "Token to send the pool"
        },
        "returns": {
          "_0": "poolAmountOut - Amount of pool tokens minted"
        }
      },
      "joinswapPoolAmountOut(address,uint256,uint256)": {
        "details": "Pay up to `maxAmountIn` of `tokenIn` to mint exactly `poolAmountOut`. The pool implicitly swaps `(1- weightTokenIn) * tokenAmountIn` to the other underlying tokens. Thus a swap fee is charged against the input tokens.",
        "params": {
          "maxAmountIn": "Maximum amount of `tokenIn` to pay",
          "poolAmountOut": "Exact amount of pool tokens to mint",
          "tokenIn": "Token to send the pool"
        },
        "returns": {
          "_0": "tokenAmountIn - Amount of `tokenIn` paid"
        }
      },
      "reindexTokens(address[],uint96[],uint256[])": {
        "details": "Update the underlying assets held by the pool and their associated weights. Tokens which are not currently bound will be gradually added as they are swapped in to reach the provided minimum balances, which must be an amount of tokens worth the minimum weight of the total pool value. If a currently bound token is not received in this call, the token's desired weight will be set to 0."
      },
      "reweighTokens(address[],uint96[])": {
        "details": "Sets the desired weights for the pool tokens, which will be adjusted over time as they are swapped. Note: This does not check for duplicate tokens or that the total of the desired weights is equal to the target total weight (25). Those assumptions should be met in the controller. Further, the provided tokens should only include the tokens which are not set for removal."
      },
      "setMaxPoolTokens(uint256)": {
        "details": "Sets the maximum number of pool tokens that can be minted. This value will be used in the alpha to limit the maximum damage that can be caused by a catastrophic error. It can be gradually increased as the pool continues to not be exploited. If it is set to 0, the limit will be removed."
      },
      "setMinimumBalance(address,uint256)": {
        "details": "Updates the minimum balance for an uninitialized token. This becomes useful if a token's external price significantly rises after being bound, since the pool can not send a token out until it reaches the minimum balance."
      },
      "setSwapFee(uint256)": {
        "details": "Set the swap fee. Note: Swap fee must be between 0.0001% and 10%"
      },
      "swapExactAmountIn(address,uint256,address,uint256,uint256)": {
        "details": "Execute a token swap with a specified amount of input tokens and a minimum amount of output tokens. Note: Will revert if `tokenOut` is uninitialized.",
        "params": {
          "maxPrice": "Maximum ratio of input to output tokens",
          "minAmountOut": "Minimum amount of `tokenOut` to receive",
          "tokenAmountIn": "Exact amount of `tokenIn` to swap in",
          "tokenIn": "Token to swap in",
          "tokenOut": "Token to swap out"
        },
        "returns": {
          "_0": "(tokenAmountOut, spotPriceAfter)"
        }
      },
      "swapExactAmountOut(address,uint256,address,uint256,uint256)": {
        "details": "Trades at most `maxAmountIn` of `tokenIn` for exactly `tokenAmountOut` of `tokenOut`. Returns the actual input amount and the new spot price after the swap, which can not exceed `maxPrice`.",
        "params": {
          "maxAmountIn": "Maximum amount of `tokenIn` to pay",
          "maxPrice": "Maximum ratio of input to output tokens",
          "tokenAmountOut": "Exact amount of `tokenOut` to receive",
          "tokenIn": "Token to swap in",
          "tokenOut": "Token to swap out"
        },
        "returns": {
          "_0": "(tokenAmountIn, spotPriceAfter)"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1236,
        "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
        "label": "_balance",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1242,
        "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
        "label": "_allowance",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 1244,
        "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1447,
        "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 1449,
        "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 1943,
        "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
        "label": "_mutex",
        "offset": 0,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 1945,
        "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
        "label": "_controller",
        "offset": 1,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 1947,
        "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
        "label": "_unbindHandler",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(TokenUnbindHandler)5319"
      },
      {
        "astId": 1949,
        "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
        "label": "_publicSwap",
        "offset": 20,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 1951,
        "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
        "label": "_swapFee",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1954,
        "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
        "label": "_tokens",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1958,
        "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
        "label": "_records",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_struct(Record)5351_storage)"
      },
      {
        "astId": 1960,
        "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
        "label": "_totalWeight",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 1964,
        "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
        "label": "_minimumBalances",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1966,
        "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
        "label": "_maxPoolTokens",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(TokenUnbindHandler)5319": {
        "encoding": "inplace",
        "label": "contract TokenUnbindHandler",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_struct(Record)5351_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IIndexPool.Record)",
        "numberOfBytes": "32",
        "value": "t_struct(Record)5351_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Record)5351_storage": {
        "encoding": "inplace",
        "label": "struct IIndexPool.Record",
        "members": [
          {
            "astId": 5338,
            "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
            "label": "bound",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 5340,
            "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
            "label": "ready",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 5342,
            "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
            "label": "lastDenormUpdate",
            "offset": 2,
            "slot": "0",
            "type": "t_uint40"
          },
          {
            "astId": 5344,
            "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
            "label": "denorm",
            "offset": 7,
            "slot": "0",
            "type": "t_uint96"
          },
          {
            "astId": 5346,
            "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
            "label": "desiredDenorm",
            "offset": 19,
            "slot": "0",
            "type": "t_uint96"
          },
          {
            "astId": 5348,
            "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
            "label": "index",
            "offset": 31,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 5350,
            "contract": "deploy-contracts/balancer/IndexPool.sol:IndexPool",
            "label": "balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint40": {
        "encoding": "inplace",
        "label": "uint40",
        "numberOfBytes": "5"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  },
  "gasEstimates": {
    "creation": {
      "codeDepositCost": "4891400",
      "executionCost": "5784",
      "totalCost": "4897184"
    },
    "external": {
      "VERSION_NUMBER()": "340",
      "allowance(address,address)": "infinite",
      "approve(address,uint256)": "infinite",
      "balanceOf(address)": "1346",
      "configure(address,string,string)": "infinite",
      "decimals()": "286",
      "decreaseApproval(address,uint256)": "infinite",
      "exitPool(uint256,uint256[])": "infinite",
      "exitswapExternAmountOut(address,uint256,uint256)": "infinite",
      "exitswapPoolAmountIn(address,uint256,uint256)": "infinite",
      "extrapolatePoolValueFromToken()": "infinite",
      "flashBorrow(address,address,uint256,bytes)": "infinite",
      "getBalance(address)": "3078",
      "getController()": "1215",
      "getCurrentDesiredTokens()": "infinite",
      "getCurrentTokens()": "infinite",
      "getDenormalizedWeight(address)": "3165",
      "getMaxPoolTokens()": "1140",
      "getMinimumBalance(address)": "4412",
      "getNumTokens()": "1072",
      "getSpotPrice(address,address)": "infinite",
      "getSwapFee()": "1928",
      "getTokenRecord(address)": "3799",
      "getTotalDenormalizedWeight()": "1951",
      "getUsedBalance(address)": "4495",
      "gulp(address)": "infinite",
      "increaseApproval(address,uint256)": "infinite",
      "initialize(address[],uint256[],uint96[],address,address)": "infinite",
      "isBound(address)": "1408",
      "isPublicSwap()": "1211",
      "joinPool(uint256,uint256[])": "infinite",
      "joinswapExternAmountIn(address,uint256,uint256)": "infinite",
      "joinswapPoolAmountOut(address,uint256,uint256)": "infinite",
      "name()": "infinite",
      "reindexTokens(address[],uint96[],uint256[])": "infinite",
      "reweighTokens(address[],uint96[])": "infinite",
      "setMaxPoolTokens(uint256)": "22243",
      "setMinimumBalance(address,uint256)": "24495",
      "setSwapFee(uint256)": "22296",
      "swapExactAmountIn(address,uint256,address,uint256,uint256)": "infinite",
      "swapExactAmountOut(address,uint256,address,uint256,uint256)": "infinite",
      "symbol()": "infinite",
      "totalSupply()": "1074",
      "transfer(address,uint256)": "45553",
      "transferFrom(address,address,uint256)": "infinite"
    },
    "internal": {
      "_bind(address,uint256,uint96)": "infinite",
      "_burnPoolShare(uint256)": "infinite",
      "_decreaseDenorm(struct IIndexPool.Record memory,address)": "infinite",
      "_getInputToken(address)": "infinite",
      "_getOutputToken(address)": "infinite",
      "_increaseDenorm(struct IIndexPool.Record memory,address)": "infinite",
      "_mintPoolShare(uint256)": "infinite",
      "_pullPoolShare(address,uint256)": "infinite",
      "_pullUnderlying(address,address,uint256)": "infinite",
      "_pushPoolShare(address,uint256)": "infinite",
      "_pushUnderlying(address,address,uint256)": "infinite",
      "_setDesiredDenorm(address,uint96)": "infinite",
      "_unbind(address)": "infinite",
      "_updateInputToken(address,struct IIndexPool.Record memory,uint256)": "infinite"
    }
  }
}